[tool.poetry]
authors = []
description = "Tumult's differential privacy primitives"
name = "tmlt.core"
readme = "README.md"
version = "0.4.3"
license = "Apache-2.0"
repository = "https://gitlab.com/tumult-labs/core"
documentation = "https://docs.tmlt.dev/core/latest"

classifiers = [
   "Development Status :: 4 - Beta",
   "Intended Audience :: Developers",
   "Intended Audience :: Science/Research",
   "Natural Language :: English",
   "Topic :: Software Development :: Libraries",
   "Topic :: Software Development :: Libraries :: Python Modules",
   "Topic :: Scientific/Engineering",
   "Topic :: Security",
]
include = [
  {path = "CHANGELOG.md", format = "sdist"},
  {path = "test_requirements.txt", format = "sdist"},
  {path = "doc/", format = "sdist"},
  {path = "examples/", format = "sdist"},
  {path = "benchmark/", format = "sdist"},
  { path = "test/", format = "sdist" },
  { path = "LICENSE", format = "sdist" },
  { path = "NOTICE", format = "sdist" },
]
packages = [
  {include = "tmlt"},
]

[tool.poetry.dependencies]
python = "^3.7.1"

numpy = "^1.18.0,<1.19.5"
pandas = "^1.2.0"
pyarrow = "^2.0.0"
pyspark = {version = "^3.0.0,<3.1.0", extras = ["sql"]}
python-flint = "0.3.0"
randomgen = "^1.18.1"
scipy = "^1.4.1,<1.6.1"
sympy = "^1.8,<1.10"
typeguard = "^2.12.1,<2.13.0"
typing_extensions = "^3.10.0.0"

[tool.poetry.dev-dependencies]
# Give Poetry some help locking -- Pandas evidently has complicated
# dependencies, so only letting Poetry use one version of it (even though
# multiple are supported) speeds up locking a lot. Bump this as needed.
pandas = "1.3.3"

# Linters, formatters
black = "21.9b0"
isort = "4.3.21"
mypy = "0.940"
pydocstyle = "6.1.1"
pylint = "2.5.3"

# CI, testing, docs
coverage = "^5.1"
nose = "^1.3.7"
pandoc = "^1.0.2"
parameterized = "^0.7.4"
scanpydoc = "0.7.3" # 0.7.4 doesn't work
sphinx = "^4.3.0"
sphinx-autoapi = "^1.7.0"
sphinx-autodoc-typehints = "1.12.0" # 1.13.0 doesn't work https://gitlab.com/tumult-labs/tumult/-/issues/1565
sphinx-copybutton = "^0.4.0"
sphinx-panels = "^0.6.0"
sphinxcontrib-bibtex = "^1.0.0"
pydata-sphinx-theme = "0.9.0"

# click 8.1.0 removes _unicodefun which breaks the CI; remove this after
# upgrading Black.
click = "8.0.4"

[[tool.poetry.source]]
name = "flint"
url = "https://d3p0voevd56kj6.cloudfront.net"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.isort]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
profile = "black"
use_parentheses = true

[tool.mypy]
explicit_package_bases = true
follow_imports = "silent"
ignore_missing_imports = true
namespace_packages = true

[tool.pylint.master]
# See https://github.com/PyCQA/pylint/issues/1975#issuecomment-387924981
extension-pkg-whitelist = ['numpy']
load-plugins = ['pylint.extensions.docparams']
# Only check param docs in docstrings that contain an Args: section.
# Set to "no" to show docstrings missing argument documentation.
accept-no-param-doc = true

[tool.pylint.'MESSAGES CONTROL']
disable = [
  'arguments-differ',
  'bad-continuation',
  'duplicate-code',
  'fixme',
  'invalid-name',
  'logging-format-interpolation',
  'logging-fstring-interpolation',
  'missing-raises-doc',
  'missing-return-doc',
  'no-else-return',
  'super-init-not-called',
  'too-few-public-methods',
  'too-many-ancestors',
  'too-many-arguments',
  'too-many-branches',
  'too-many-instance-attributes',
  'too-many-lines',
  'too-many-locals',
  'too-many-public-methods',
  'too-many-return-statements',
  'too-many-statements',
  'unbalanced-tuple-unpacking',
  'wrong-import-order',
]

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pydocstyle]
add-ignore = [
  # `D200: One-line docstring should fit on one line with quotes`
  # conflicts with pylint's `max-line-length`.
  "D200",
]
convention = "google"
