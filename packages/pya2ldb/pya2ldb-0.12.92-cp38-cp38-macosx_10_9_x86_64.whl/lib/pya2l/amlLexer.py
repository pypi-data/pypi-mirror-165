# Generated from pya2l/aml.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2&")
        buf.write("\u015b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3")
        buf.write("\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\36\3\36\7\36\u00df\n\36\f\36\16\36\u00e2\13\36\3\37")
        buf.write("\3\37\3\37\3\37\3 \6 \u00e9\n \r \16 \u00ea\3!\3!\3!\6")
        buf.write("!\u00f0\n!\r!\16!\u00f1\3\"\5\"\u00f5\n\"\3\"\6\"\u00f8")
        buf.write("\n\"\r\"\16\"\u00f9\3\"\3\"\7\"\u00fe\n\"\f\"\16\"\u0101")
        buf.write("\13\"\3\"\5\"\u0104\n\"\3\"\3\"\6\"\u0108\n\"\r\"\16\"")
        buf.write("\u0109\3\"\5\"\u010d\n\"\3\"\6\"\u0110\n\"\r\"\16\"\u0111")
        buf.write("\3\"\5\"\u0115\n\"\3#\3#\3#\3#\7#\u011b\n#\f#\16#\u011e")
        buf.write("\13#\3#\5#\u0121\n#\3#\3#\3#\3#\3#\7#\u0128\n#\f#\16#")
        buf.write("\u012b\13#\3#\3#\5#\u012f\n#\3#\3#\3$\3$\3$\3$\3%\3%\3")
        buf.write("%\7%\u013a\n%\f%\16%\u013d\13%\3%\3%\3&\3&\5&\u0143\n")
        buf.write("&\3&\6&\u0146\n&\r&\16&\u0147\3\'\3\'\3(\3(\3(\5(\u014f")
        buf.write("\n(\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u015a\n)\3\u0129\2*")
        buf.write("\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\2M\2")
        buf.write("O\2Q\2\3\2\f\5\2C\\aac|\6\2\62;C\\aac|\4\2ZZzz\5\2\62")
        buf.write(";CHch\4\2--//\4\2\f\f\17\17\5\2\13\f\17\17\"\"\4\2$$^")
        buf.write("^\4\2GGgg\n\2$$))^^ddhhppttvv\2\u016d\2\3\3\2\2\2\2\5")
        buf.write("\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2")
        buf.write("\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2")
        buf.write("\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2")
        buf.write("\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2")
        buf.write("\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61")
        buf.write("\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2")
        buf.write("\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3")
        buf.write("\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\3S\3\2\2\2\5Z")
        buf.write("\3\2\2\2\7_\3\2\2\2\td\3\2\2\2\13f\3\2\2\2\rk\3\2\2\2")
        buf.write("\17o\3\2\2\2\21t\3\2\2\2\23z\3\2\2\2\25\177\3\2\2\2\27")
        buf.write("\u0085\3\2\2\2\31\u008b\3\2\2\2\33\u0092\3\2\2\2\35\u0099")
        buf.write("\3\2\2\2\37\u009f\3\2\2\2!\u00a5\3\2\2\2#\u00a7\3\2\2")
        buf.write("\2%\u00a9\3\2\2\2\'\u00ab\3\2\2\2)\u00b0\3\2\2\2+\u00b2")
        buf.write("\3\2\2\2-\u00b4\3\2\2\2/\u00b6\3\2\2\2\61\u00b8\3\2\2")
        buf.write("\2\63\u00bf\3\2\2\2\65\u00c1\3\2\2\2\67\u00c3\3\2\2\2")
        buf.write("9\u00d0\3\2\2\2;\u00dc\3\2\2\2=\u00e3\3\2\2\2?\u00e8\3")
        buf.write("\2\2\2A\u00ec\3\2\2\2C\u00f4\3\2\2\2E\u012e\3\2\2\2G\u0132")
        buf.write("\3\2\2\2I\u0136\3\2\2\2K\u0140\3\2\2\2M\u0149\3\2\2\2")
        buf.write("O\u014e\3\2\2\2Q\u0159\3\2\2\2ST\7\61\2\2TU\7d\2\2UV\7")
        buf.write("g\2\2VW\7i\2\2WX\7k\2\2XY\7p\2\2Y\4\3\2\2\2Z[\7C\2\2[")
        buf.write("\\\7\64\2\2\\]\7O\2\2]^\7N\2\2^\6\3\2\2\2_`\7\61\2\2`")
        buf.write("a\7g\2\2ab\7p\2\2bc\7f\2\2c\b\3\2\2\2de\7=\2\2e\n\3\2")
        buf.write("\2\2fg\7e\2\2gh\7j\2\2hi\7c\2\2ij\7t\2\2j\f\3\2\2\2kl")
        buf.write("\7k\2\2lm\7p\2\2mn\7v\2\2n\16\3\2\2\2op\7n\2\2pq\7q\2")
        buf.write("\2qr\7p\2\2rs\7i\2\2s\20\3\2\2\2tu\7w\2\2uv\7e\2\2vw\7")
        buf.write("j\2\2wx\7c\2\2xy\7t\2\2y\22\3\2\2\2z{\7w\2\2{|\7k\2\2")
        buf.write("|}\7p\2\2}~\7v\2\2~\24\3\2\2\2\177\u0080\7w\2\2\u0080")
        buf.write("\u0081\7n\2\2\u0081\u0082\7q\2\2\u0082\u0083\7p\2\2\u0083")
        buf.write("\u0084\7i\2\2\u0084\26\3\2\2\2\u0085\u0086\7k\2\2\u0086")
        buf.write("\u0087\7p\2\2\u0087\u0088\7v\2\2\u0088\u0089\78\2\2\u0089")
        buf.write("\u008a\7\66\2\2\u008a\30\3\2\2\2\u008b\u008c\7w\2\2\u008c")
        buf.write("\u008d\7k\2\2\u008d\u008e\7p\2\2\u008e\u008f\7v\2\2\u008f")
        buf.write("\u0090\78\2\2\u0090\u0091\7\66\2\2\u0091\32\3\2\2\2\u0092")
        buf.write("\u0093\7f\2\2\u0093\u0094\7q\2\2\u0094\u0095\7w\2\2\u0095")
        buf.write("\u0096\7d\2\2\u0096\u0097\7n\2\2\u0097\u0098\7g\2\2\u0098")
        buf.write("\34\3\2\2\2\u0099\u009a\7h\2\2\u009a\u009b\7n\2\2\u009b")
        buf.write("\u009c\7q\2\2\u009c\u009d\7c\2\2\u009d\u009e\7v\2\2\u009e")
        buf.write("\36\3\2\2\2\u009f\u00a0\7d\2\2\u00a0\u00a1\7n\2\2\u00a1")
        buf.write("\u00a2\7q\2\2\u00a2\u00a3\7e\2\2\u00a3\u00a4\7m\2\2\u00a4")
        buf.write(" \3\2\2\2\u00a5\u00a6\7*\2\2\u00a6\"\3\2\2\2\u00a7\u00a8")
        buf.write("\7+\2\2\u00a8$\3\2\2\2\u00a9\u00aa\7,\2\2\u00aa&\3\2\2")
        buf.write("\2\u00ab\u00ac\7g\2\2\u00ac\u00ad\7p\2\2\u00ad\u00ae\7")
        buf.write("w\2\2\u00ae\u00af\7o\2\2\u00af(\3\2\2\2\u00b0\u00b1\7")
        buf.write("}\2\2\u00b1*\3\2\2\2\u00b2\u00b3\7\177\2\2\u00b3,\3\2")
        buf.write("\2\2\u00b4\u00b5\7.\2\2\u00b5.\3\2\2\2\u00b6\u00b7\7?")
        buf.write("\2\2\u00b7\60\3\2\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba\7")
        buf.write("v\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc\7w\2\2\u00bc\u00bd")
        buf.write("\7e\2\2\u00bd\u00be\7v\2\2\u00be\62\3\2\2\2\u00bf\u00c0")
        buf.write("\7]\2\2\u00c0\64\3\2\2\2\u00c1\u00c2\7_\2\2\u00c2\66\3")
        buf.write("\2\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5\7c\2\2\u00c5\u00c6")
        buf.write("\7i\2\2\u00c6\u00c7\7i\2\2\u00c7\u00c8\7g\2\2\u00c8\u00c9")
        buf.write("\7f\2\2\u00c9\u00ca\7u\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc")
        buf.write("\7t\2\2\u00cc\u00cd\7w\2\2\u00cd\u00ce\7e\2\2\u00ce\u00cf")
        buf.write("\7v\2\2\u00cf8\3\2\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2")
        buf.write("\7c\2\2\u00d2\u00d3\7i\2\2\u00d3\u00d4\7i\2\2\u00d4\u00d5")
        buf.write("\7g\2\2\u00d5\u00d6\7f\2\2\u00d6\u00d7\7w\2\2\u00d7\u00d8")
        buf.write("\7p\2\2\u00d8\u00d9\7k\2\2\u00d9\u00da\7q\2\2\u00da\u00db")
        buf.write("\7p\2\2\u00db:\3\2\2\2\u00dc\u00e0\t\2\2\2\u00dd\u00df")
        buf.write("\t\3\2\2\u00de\u00dd\3\2\2\2\u00df\u00e2\3\2\2\2\u00e0")
        buf.write("\u00de\3\2\2\2\u00e0\u00e1\3\2\2\2\u00e1<\3\2\2\2\u00e2")
        buf.write("\u00e0\3\2\2\2\u00e3\u00e4\7$\2\2\u00e4\u00e5\5;\36\2")
        buf.write("\u00e5\u00e6\7$\2\2\u00e6>\3\2\2\2\u00e7\u00e9\4\62;\2")
        buf.write("\u00e8\u00e7\3\2\2\2\u00e9\u00ea\3\2\2\2\u00ea\u00e8\3")
        buf.write("\2\2\2\u00ea\u00eb\3\2\2\2\u00eb@\3\2\2\2\u00ec\u00ed")
        buf.write("\7\62\2\2\u00ed\u00ef\t\4\2\2\u00ee\u00f0\t\5\2\2\u00ef")
        buf.write("\u00ee\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00ef\3\2\2\2")
        buf.write("\u00f1\u00f2\3\2\2\2\u00f2B\3\2\2\2\u00f3\u00f5\t\6\2")
        buf.write("\2\u00f4\u00f3\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5\u0114")
        buf.write("\3\2\2\2\u00f6\u00f8\4\62;\2\u00f7\u00f6\3\2\2\2\u00f8")
        buf.write("\u00f9\3\2\2\2\u00f9\u00f7\3\2\2\2\u00f9\u00fa\3\2\2\2")
        buf.write("\u00fa\u00fb\3\2\2\2\u00fb\u00ff\7\60\2\2\u00fc\u00fe")
        buf.write("\4\62;\2\u00fd\u00fc\3\2\2\2\u00fe\u0101\3\2\2\2\u00ff")
        buf.write("\u00fd\3\2\2\2\u00ff\u0100\3\2\2\2\u0100\u0103\3\2\2\2")
        buf.write("\u0101\u00ff\3\2\2\2\u0102\u0104\5K&\2\u0103\u0102\3\2")
        buf.write("\2\2\u0103\u0104\3\2\2\2\u0104\u0115\3\2\2\2\u0105\u0107")
        buf.write("\7\60\2\2\u0106\u0108\4\62;\2\u0107\u0106\3\2\2\2\u0108")
        buf.write("\u0109\3\2\2\2\u0109\u0107\3\2\2\2\u0109\u010a\3\2\2\2")
        buf.write("\u010a\u010c\3\2\2\2\u010b\u010d\5K&\2\u010c\u010b\3\2")
        buf.write("\2\2\u010c\u010d\3\2\2\2\u010d\u0115\3\2\2\2\u010e\u0110")
        buf.write("\4\62;\2\u010f\u010e\3\2\2\2\u0110\u0111\3\2\2\2\u0111")
        buf.write("\u010f\3\2\2\2\u0111\u0112\3\2\2\2\u0112\u0113\3\2\2\2")
        buf.write("\u0113\u0115\5K&\2\u0114\u00f7\3\2\2\2\u0114\u0105\3\2")
        buf.write("\2\2\u0114\u010f\3\2\2\2\u0115D\3\2\2\2\u0116\u0117\7")
        buf.write("\61\2\2\u0117\u0118\7\61\2\2\u0118\u011c\3\2\2\2\u0119")
        buf.write("\u011b\n\7\2\2\u011a\u0119\3\2\2\2\u011b\u011e\3\2\2\2")
        buf.write("\u011c\u011a\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u0120\3")
        buf.write("\2\2\2\u011e\u011c\3\2\2\2\u011f\u0121\7\17\2\2\u0120")
        buf.write("\u011f\3\2\2\2\u0120\u0121\3\2\2\2\u0121\u0122\3\2\2\2")
        buf.write("\u0122\u012f\7\f\2\2\u0123\u0124\7\61\2\2\u0124\u0125")
        buf.write("\7,\2\2\u0125\u0129\3\2\2\2\u0126\u0128\13\2\2\2\u0127")
        buf.write("\u0126\3\2\2\2\u0128\u012b\3\2\2\2\u0129\u012a\3\2\2\2")
        buf.write("\u0129\u0127\3\2\2\2\u012a\u012c\3\2\2\2\u012b\u0129\3")
        buf.write("\2\2\2\u012c\u012d\7,\2\2\u012d\u012f\7\61\2\2\u012e\u0116")
        buf.write("\3\2\2\2\u012e\u0123\3\2\2\2\u012f\u0130\3\2\2\2\u0130")
        buf.write("\u0131\b#\2\2\u0131F\3\2\2\2\u0132\u0133\t\b\2\2\u0133")
        buf.write("\u0134\3\2\2\2\u0134\u0135\b$\3\2\u0135H\3\2\2\2\u0136")
        buf.write("\u013b\7$\2\2\u0137\u013a\5O(\2\u0138\u013a\n\t\2\2\u0139")
        buf.write("\u0137\3\2\2\2\u0139\u0138\3\2\2\2\u013a\u013d\3\2\2\2")
        buf.write("\u013b\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u013e\3")
        buf.write("\2\2\2\u013d\u013b\3\2\2\2\u013e\u013f\7$\2\2\u013fJ\3")
        buf.write("\2\2\2\u0140\u0142\t\n\2\2\u0141\u0143\t\6\2\2\u0142\u0141")
        buf.write("\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0145\3\2\2\2\u0144")
        buf.write("\u0146\4\62;\2\u0145\u0144\3\2\2\2\u0146\u0147\3\2\2\2")
        buf.write("\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148L\3\2\2")
        buf.write("\2\u0149\u014a\t\5\2\2\u014aN\3\2\2\2\u014b\u014c\7^\2")
        buf.write("\2\u014c\u014f\t\13\2\2\u014d\u014f\5Q)\2\u014e\u014b")
        buf.write("\3\2\2\2\u014e\u014d\3\2\2\2\u014fP\3\2\2\2\u0150\u0151")
        buf.write("\7^\2\2\u0151\u0152\4\62\65\2\u0152\u0153\4\629\2\u0153")
        buf.write("\u015a\4\629\2\u0154\u0155\7^\2\2\u0155\u0156\4\629\2")
        buf.write("\u0156\u015a\4\629\2\u0157\u0158\7^\2\2\u0158\u015a\4")
        buf.write("\629\2\u0159\u0150\3\2\2\2\u0159\u0154\3\2\2\2\u0159\u0157")
        buf.write("\3\2\2\2\u015aR\3\2\2\2\30\2\u00e0\u00ea\u00f1\u00f4\u00f9")
        buf.write("\u00ff\u0103\u0109\u010c\u0111\u0114\u011c\u0120\u0129")
        buf.write("\u012e\u0139\u013b\u0142\u0147\u014e\u0159\4\2\3\2\b\2")
        buf.write("\2")
        return buf.getvalue()


class amlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    ID = 29
    TAG = 30
    INT = 31
    HEX = 32
    FLOAT = 33
    COMMENT = 34
    WS = 35
    STRING = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'/begin'", "'A2ML'", "'/end'", "';'", "'char'", "'int'", "'long'", 
            "'uchar'", "'uint'", "'ulong'", "'int64'", "'uint64'", "'double'", 
            "'float'", "'block'", "'('", "')'", "'*'", "'enum'", "'{'", 
            "'}'", "','", "'='", "'struct'", "'['", "']'", "'taggedstruct'", 
            "'taggedunion'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "TAG", "INT", "HEX", "FLOAT", "COMMENT", "WS", "STRING" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "ID", "TAG", "INT", "HEX", "FLOAT", 
                  "COMMENT", "WS", "STRING", "EXPONENT", "HEX_DIGIT", "ESC_SEQ", 
                  "OCTAL_ESC" ]

    grammarFileName = "aml.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


