# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: deepomatic/oef/protos/evaluation.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='deepomatic/oef/protos/evaluation.proto',
  package='deepomatic.oef.evaluation',
  syntax='proto2',
  serialized_pb=_b('\n&deepomatic/oef/protos/evaluation.proto\x12\x19\x64\x65\x65pomatic.oef.evaluation\"&\n\nEvaluation\x12\x18\n\rn_evaluations\x18\x01 \x01(\x05:\x01\x30')
)




_EVALUATION = _descriptor.Descriptor(
  name='Evaluation',
  full_name='deepomatic.oef.evaluation.Evaluation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='n_evaluations', full_name='deepomatic.oef.evaluation.Evaluation.n_evaluations', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=107,
)

DESCRIPTOR.message_types_by_name['Evaluation'] = _EVALUATION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Evaluation = _reflection.GeneratedProtocolMessageType('Evaluation', (_message.Message,), dict(
  DESCRIPTOR = _EVALUATION,
  __module__ = 'deepomatic.oef.protos.evaluation_pb2'
  # @@protoc_insertion_point(class_scope:deepomatic.oef.evaluation.Evaluation)
  ))
_sym_db.RegisterMessage(Evaluation)


# @@protoc_insertion_point(module_scope)
