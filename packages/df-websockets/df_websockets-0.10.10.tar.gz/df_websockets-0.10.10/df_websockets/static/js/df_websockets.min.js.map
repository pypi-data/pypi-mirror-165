{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./df_websockets/forms.ts","webpack:///./df_websockets/app.js","webpack:///./df_websockets/html.js","webpack:///./df_websockets/base.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","serializeForm","form","serialized","elements","length","field","disabled","type","files","push","selectedOptions","checked","htmlFormsSet","opts","document","querySelectorAll","selector","forEach","values","item","namedItem","RadioNodeList","input","Array","isArray","valuesSet_1","Set","has","HTMLTextAreaElement","HTMLInputElement","HTMLSelectElement","options","valuesSet","selected","setFormFieldValue","DOMContentAdded","evt","target","JSON","parse","getAttribute","signal","eventName","on","tagName","addEventListener","prevent","window","DFSignals","preventDefault","setTimeout","connection","buffer","registry","wsurl","websocketConnect","dfWsURL","cname","ca","decodeURIComponent","cookie","split","charAt","substring","indexOf","getCookie","console","info","WebSocket","onopen","send","onmessage","e","debug","data","msg","signal_id","onerror","error","onclose","id","undefined","stringify","connect","fn","htmlAfter","elt","originalNextSibling","nextSibling","insertAdjacentHTML","content","sibling","dispatchEvent","Event","bubbles","htmlAppend","originalLastChild","lastChild","child","previousSibling","htmlPrepend","originalFirstChild","firstChild","htmlBefore","originalPreviousSibling","htmlContent","innerHTML","htmlReplaceWith","parentNode","outerHTML","htmlEmpty","removeChild","htmlRemove","htmlText","textContent","htmlAddClass","classList","add","class_name","htmlRemoveClass","remove","htmlRemoveAttr","removeAttribute","attr_name","htmlAddAttribute","setAttribute","attr_value","htmlBooleanAttribute","htmlDownloadFile","save","createElement","href","url","download","filename","MouseEvent","view","cancelable","URL","webkitURL","revokeObjectURL","htmlFocus","querySelector","focus","preventScroll"],"mappings":"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","file":"df_websockets/static/js/df_websockets.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export function serializeForm(form) {\n    /*\n    Serialize a HTMLFormElement as a list of {name: <field name>, value: <field value>}\n    disabled/reset/submit/buttonf fields are ignored\n     */\n    var serialized = [];\n    // Loop through each field in the form\n    for (var i = 0; i < form.elements.length; i++) {\n        var field = form.elements[i];\n        // Respect the same rules as jQuery's serializeArray\n        if (!field.name || field.disabled || field.type === 'reset' || field.type === 'submit' || field.type === 'button') {\n            continue;\n        }\n        if (field.type === \"file\") { // just returns the name of selected files\n            for (var n = 0; n < field.files.length; n++) {\n                serialized.push({ name: field.name, value: field.files[n].name });\n            }\n        }\n        else if (field.type === 'select-multiple') { // get all selected options\n            for (var n = 0; n < field.selectedOptions.length; n++) {\n                serialized.push({ name: field.name, value: field.selectedOptions[n].value });\n            }\n        }\n        else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {\n            serialized.push({ name: field.name, value: field.value });\n        }\n    }\n    return serialized;\n}\nfunction setFormFieldValue(form, name, value) {\n    var item = form.elements.namedItem(name);\n    if (item === null) {\n        return;\n    }\n    else if (item instanceof RadioNodeList) {\n        if ((value === true) || (value === false)) {\n            item.forEach(function (input) {\n                input.checked = value;\n            });\n        }\n        else if (Array.isArray(value)) {\n            var valuesSet_1 = new Set(value);\n            item.forEach(function (input) {\n                input.checked = valuesSet_1.has(input.value);\n            });\n        }\n        else {\n            item.forEach(function (input) {\n                input.checked = input.value === value;\n            });\n        }\n    }\n    else if (item instanceof HTMLTextAreaElement) {\n        item.value = value;\n    }\n    else if ((item instanceof HTMLInputElement) && (item.type === \"checkbox\")) {\n        if (value === true) {\n            item.checked = true;\n        }\n        else if (value === false) {\n            item.checked = false;\n        }\n        else {\n            item.value = value;\n        }\n    }\n    else if (item instanceof HTMLSelectElement) {\n        var options = item.options;\n        if (Array.isArray(value)) {\n            var valuesSet = new Set(value);\n            for (var i = 0; i < options.length; i++) {\n                options[i].selected = valuesSet.has(options[i].value);\n            }\n        }\n        else {\n            for (var i = 0; i < options.length; i++) {\n                options[i].selected = options[i].value === value;\n            }\n        }\n    }\n    else if (item instanceof HTMLInputElement) {\n        item.value = value;\n    }\n}\nexport function htmlFormsSet(opts) {\n    document.querySelectorAll(opts.selector).forEach(function (form) {\n        opts.values.forEach(function (values) {\n            setFormFieldValue(form, values.name, values.value);\n        });\n    });\n}\nfunction DOMContentAdded(evt) {\n    /*\n    search all HTML elements with an attribute \"data-df-signal\" that contains a JSON list of Signal objects:\n    {\n        name: \"name of the signal to call\",  (required)\n        on: \"name of the listened event\",\n        opts: \"extra options\",               (optional)\n        form: \"name of option to add to opts that contains the serialized form\",  (optional)\n        value: \"name of option to add to opts that contains the value\",  (optional)\n        prevent: preventDefault               (optional, defaults to true for on==\"submit\" or \"click\" else false )\n    }\n\n    When the listened event is not given, the listened event is\n        * \"submit\" for forms,\n        * \"click\" for \"reset\"/\"submit\"/\"button\" input fields,\n        * \"change\" for other fields.\n\n    Using on a HTML form:\n    ```html\n    <form data-df-signal='[{\"name\": \"signal.name\", \"on\": \"change\", \"form\": \"form_data\", \"opts\": {\"id\": 42} }]'>\n        <input type=\"text\" name=\"title\" value=\"df_websockets\">\n    </form>```\n    or, using the Django templating system:\n    ```html\n    {% load df_websockets %}\n    <form {% js_call \"signal.name\" on=\"change\" form=\"form_data\" id=42 %}>\n        <input type=\"text\" name=\"title\" value=\"df_websockets\">\n    </form>```\n\n    When the field \"title\" is modified, a signal \"signal.name\" is triggered on the server (via the websocket) with\n    the following arguments:\n    ```python\n    form_data = [{\"name\": \"title\", \"value\": \"df_websockets\"}]\n    id = 42\n    ```\n\n    Using on a HTML form input field:\n    ```html\n    <form>\n        <input type=\"text\" name=\"title\" data-df-signal='[{\"name\": \"signal.name\", \"on\": \"change\", \"value\": \"title\", \"opts\": {\"id\": 42} }]'>\n    </form>```\n    or, using the Django templating system:\n    ```html\n    {% load df_websockets %}\n    <form>\n        <input type=\"text\" name=\"title\" {% js_call \"signal.name\" on=\"change\" value=\"title\" id=42 %}>\n    </form>```\n\n    When the field \"title\" is modified, a signal \"signal.name\" is triggered on the server (via the websocket) with\n    the following arguments:\n    ```python\n    title = \"new title value\"\n    id = 42\n    ```\n     */\n    evt.target.querySelectorAll(\"[data-df-signal]\").forEach(function (target) {\n        var signals = JSON.parse(target.getAttribute(\"data-df-signal\"));\n        signals.forEach(function (signal) {\n            var eventName = signal.on;\n            if (!eventName) {\n                if (target.tagName === \"FORM\") {\n                    eventName = \"submit\";\n                }\n                else if ((target.tagName === \"INPUT\" && !(target.type === 'reset' || target.type === 'submit' || target.type === 'button')) || (target.tagName === \"TEXTAREA\")) {\n                    eventName = \"change\";\n                }\n                else {\n                    eventName = \"click\";\n                }\n            }\n            var callback = function (evt) {\n                // noinspection JSUnresolvedVariable\n                var prevent = signal.prevent;\n                var opts = signal.opts || {};\n                if (signal.form) {\n                    opts[signal.form] = serializeForm(target);\n                }\n                if (signal.value) {\n                    if (target.type === \"file\") { // just returns the name of selected files\n                        opts[signal.value] = [];\n                        for (var n = 0; n < target.files.length; n++) {\n                            opts[signal.value].push(target.files[n].name);\n                        }\n                    }\n                    else if (target.type === 'select-multiple') { // get all selected options\n                        opts[signal.value] = [];\n                        for (var n = 0; n < target.selectedOptions.length; n++) {\n                            opts[signal.value].push(target.selectedOptions[n].value);\n                        }\n                    }\n                    else if (target.type === 'checkbox' || target.type === 'radio') {\n                        opts[signal.value] = target.checked;\n                    }\n                    else {\n                        opts[signal.value] = target.value;\n                    }\n                }\n                window.DFSignals.call(signal.name, opts);\n                if (prevent === true || (prevent === null && eventName !== \"change\")) {\n                    evt.preventDefault();\n                }\n            };\n            target.addEventListener(eventName, callback);\n        });\n    });\n}\ndocument.addEventListener(\"DOMContentAdded\", function (evt) {\n    window.setTimeout(function () {\n        DOMContentAdded(evt);\n    }, 200);\n    // awful trick for being sure that our addEventListener is the last.\n    // allows things like CKEditor to push its content to the textarea before sending the content of the form.\n});\ndocument.addEventListener(\"DOMContentLoaded\", function (evt) {\n    window.setTimeout(function () {\n        DOMContentAdded(evt);\n    }, 200);\n    // awful trick for being sure that our addEventListener is the last.\n    // allows things like CKEditor to push its content to the textarea before sending the content of the form.\n});\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nwindow.DFSignals = {\n    connection: null,\n    buffer: [],\n    registry: {},\n    wsurl: null\n};\n\nfunction getCookie(cname) {\n    const name = cname + \"=\";\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nfunction websocketConnect() {\n    const cookieName = \"dfwsurl\";\n    if (window.DFSignals.wsurl === null) {\n        const dfWsURL = getCookie(cookieName);\n        window.DFSignals.wsurl = decodeURIComponent(dfWsURL);\n    }\n    if (!window.DFSignals.wsurl) {\n        console.info(\"Unable to get the websocket URL in the '\" + cookieName + \"' cookie.\");\n        return;\n    }\n    const connection = new WebSocket(window.DFSignals.wsurl);\n    /* cannot use header or cookies (cookies may change after the initial connection)\n    *  so we use GET parameter\n    *  */\n    connection.onopen = () => {\n        window.DFSignals.connection = connection;\n        for (let i = 0; i < window.DFSignals.buffer.length; i++) {\n            connection.send(window.DFSignals.buffer[i]);\n        }\n        window.DFSignals.buffer = [];\n    };\n    connection.onmessage = (e) => {\n        console.debug('received call ' + e.data + ' from server.')\n        const msg = JSON.parse(e.data);\n        // noinspection JSUnresolvedVariable\n        if (msg.signal && msg.signal_id) {\n            window.DFSignals.call(msg.signal, msg.opts, msg.signal_id);\n        }\n    };\n    connection.onerror = (e) => {\n        console.error(\"WS error: \" + e);\n    };\n    connection.onclose = () => {\n        window.DFSignals.connection = null;\n        setTimeout(websocketConnect, 3000);\n    }\n}\n\nfunction call(signal, opts, id) {\n    /*\"\"\"\n    .. function:: call(signal, opts, id)\n\n        Call a signal.\n        If the signal is also defined in the Python server and available to the user, then the Python signal is also triggered.\n\n        :param string signal: Name of the called signal.\n        :param object opts: Object with signal arguments.\n        :param string id: Unique id of each signal triggered by the server. Do not use it yourself.\n        :returns: always `false`.\n    */\n    // if (window.DFSignals.registry[signal] === undefined) {\n    //     console.debug('unknown call \"' + signal + '\" (from both client and server).');\n    //     return false;\n    // } else\n    if ((id !== undefined) && (window.DFSignals.registry[id] !== undefined)) {\n        return false;\n    } else if (id !== undefined) {\n        window.DFSignals.registry[id] = true;\n    }\n    if (window.DFSignals.registry[signal] !== undefined) {\n        console.debug('call \"' + signal + '\"', opts);\n        for (let i = 0; i < window.DFSignals.registry[signal].length; i += 1) {\n            window.DFSignals.registry[signal][i](opts, id);\n        }\n    }\n    if (id === undefined) {\n        console.debug('call from client: \"' + signal + '\"', opts);\n        const msg = JSON.stringify({signal: signal, opts: opts});\n        if (window.DFSignals.connection) {\n            window.DFSignals.connection.send(msg);\n        } else {\n            window.DFSignals.buffer.push(msg);\n        }\n    }\n\n    return false;\n}\n\nfunction connect(signal, fn) {\n    /*\"\"\"\n    .. function:: connect(signal, fn)\n\n        Connect a javascript code to the given signal name.\n\n        :param string signal: Name of the signal.\n        :param function fn: Function that takes a single object as argument. The properties of this object are the signal arguments.\n        :returns: nothing.\n    */\n    if (window.DFSignals.registry[signal] === undefined) {\n        window.DFSignals.registry[signal] = [];\n    }\n    window.DFSignals.registry[signal].push(fn);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", websocketConnect);\n\nwindow.DFSignals.call = call;\nwindow.DFSignals.connect = connect;\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nexport const htmlAfter = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalNextSibling = elt.nextSibling;\n        elt.insertAdjacentHTML('afterend', opts.content);\n        let sibling = elt.nextSibling;\n        while (sibling && (sibling !== originalNextSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.nextSibling;\n        }\n    });\n};\nexport const htmlAppend = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalLastChild = elt.lastChild;\n        elt.insertAdjacentHTML('beforeend', opts.content);\n        let child = elt.lastChild;\n        while (child && (child !== originalLastChild)) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.previousSibling;\n        }\n    });\n};\nexport const htmlPrepend = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalFirstChild = elt.firstChild;\n        elt.insertAdjacentHTML('afterbegin', opts.content);\n        let child = elt.firstChild;\n        while (child && (child !== originalFirstChild)) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.nextSibling;\n        }\n    });\n};\nexport const htmlBefore = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalPreviousSibling = elt.previousSibling;\n        elt.insertAdjacentHTML('beforebegin', opts.content);\n        let sibling = elt.previousSibling;\n        while (sibling && (sibling !== originalPreviousSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.previousSibling;\n        }\n    });\n};\nexport const htmlContent = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.innerHTML = opts.content;\n        let child = elt.firstChild;\n        while (child) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.nextSibling;\n        }\n    });\n};\nexport const htmlReplaceWith = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const previousSibling = elt.previousSibling;\n        const nextSibling = elt.nextSibling;\n        const parentNode = elt.parentNode;\n        elt.outerHTML = opts.content;\n        let sibling = parentNode.firstChild;\n        if (previousSibling) {\n            sibling = previousSibling.nextSibling;\n        }\n        while (sibling && (sibling !== nextSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.nextSibling;\n        }\n    });\n};\nexport const htmlEmpty = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        while (elt.firstChild) {\n            elt.removeChild(elt.firstChild);\n        }\n    });\n};\nexport const htmlRemove = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.parentNode.removeChild(elt);\n    });\n};\nexport const htmlText = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.textContent = opts.content;\n    });\n};\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nimport {htmlFormsSet, htmlFormsSetAll} from \"./forms\";\nimport {\n    htmlAfter,\n    htmlAppend,\n    htmlBefore,\n    htmlContent,\n    htmlEmpty,\n    htmlPrepend,\n    htmlRemove,\n    htmlReplaceWith, htmlText\n} from \"./html\";\n\nconst htmlAddClass = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.classList.add(opts.class_name)\n    });\n};\nconst htmlRemoveClass = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.classList.remove(opts.class_name);\n    });\n};\nconst htmlRemoveAttr = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.removeAttribute(opts.attr_name);\n    });\n};\nconst htmlAddAttribute = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.setAttribute(opts.attr_name, opts.attr_value);\n    });\n};\nconst htmlBooleanAttribute = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        if (opts.value) {\n            elt.setAttribute(opts.name, opts.name);\n        } else {\n            elt.removeAttribute(opts.name)\n        }\n    });\n};\nconst htmlDownloadFile = (opts) => {\n    const save = document.createElement('a');\n    save.href = opts.url;\n    save.target = '_blank';\n    save.download = opts.filename || 'unknown';\n    const evt = new MouseEvent('click', {view: window, bubbles: true, cancelable: false});\n    save.dispatchEvent(evt);\n    (window.URL || window.webkitURL).revokeObjectURL(save.href);\n};\nconst htmlFocus = (opts) => {\n    const elt = document.querySelector(opts.selector);\n    if (elt) {\n        elt.focus({preventScroll: false});\n    }\n};\n\nfunction connectSignals() {\n\n    window.DFSignals.connect('html.after', htmlAfter);\n    /*\"\"\"\n    .. function:: html.after(opts)\n\n        Insert content, specified by the parameter, after each element in the set of matched elements.\n        Equivalent to `$().after()` or `.insertAdjacentHTML('afterend', ...)`.\n        Trigger a `DOMContentAdded` event on the added content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.after', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.after', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.append', htmlAppend);\n    /*\"\"\"\n    .. function:: html.append(opts)\n\n        Insert content, specified by the parameter, to the end of each element in the set of matched elements.\n        Equivalent to `$().append()` or `.insertAdjacentHTML('beforeend', ...)`.\n        Trigger a `DOMContentAdded` event on the added content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.append', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.append', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.prepend', htmlPrepend);\n\n    /*\"\"\"\n    .. function:: html.prepend(opts)\n\n        Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\n        Equivalent to `$().prepend()` or `.insertAdjacentHTML('afterbegin', ...)`.\n        Trigger a `DOMContentAdded` event on the added content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.prepend', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.prepend', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.before', htmlBefore);\n    /*\"\"\"\n    .. function:: html.before(opts)\n\n        Insert content, specified by the parameter, before each element in the set of matched elements..\n        Equivalent to `$().before()` or `.insertAdjacentHTML('beforebegin', ...)`.\n        Trigger a `DOMContentAdded` event on the added content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.before', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.before', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n    window.DFSignals.connect('html.content', htmlContent);\n    /*\"\"\"\n    .. function:: html.content(opts)\n\n        set the HTML contents of every matched element.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.content', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.content', to=WINDOW, selector=\"#obj\", content= \"<span>hello</span>\")\n\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n    */\n\n    window.DFSignals.connect('html.replace_with', htmlReplaceWith);\n    /*\"\"\"\n    .. function:: html.replace_with(opts)\n\n        Replace each element in the set of matched elements with the provided new content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.replace_with', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.replace_with', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.empty', htmlEmpty);\n    /*\"\"\"\n    .. function:: html.empty(opts)\n\n        Remove all child nodes of the set of matched elements from the DOM.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.empty', {selector: \"#obj\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.empty', to=WINDOW, selector=\"#obj\")\n\n        :param string selector: HTML selector\n\n    */\n\n    window.DFSignals.connect('html.remove', htmlRemove);\n    /*\"\"\"\n    .. function:: html.remove(opts)\n\n        Remove the set of matched elements from the DOM.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.remove', {selector: \"#obj\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.remove', to=WINDOW, selector=\"#obj\")\n\n        :param string selector: HTML selector\n\n    */\n\n    window.DFSignals.connect('html.add_class', htmlAddClass);\n    /*\"\"\"\n    .. function:: html.add_class(opts)\n\n        Adds the specified class(es) to each of the set of matched elements.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.add_class', {selector: \"#obj\", class_name: \"myclass\"});\n\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.add_class', to=WINDOW, selector=\"#obj\", class_name=\"myclass\")\n\n\n        :param string selector: HTML selector\n        :param string class_name: new class\n\n    */\n    window.DFSignals.connect('html.remove_class', htmlRemoveClass);\n    /*\"\"\"\n    .. function:: html.remove_class(opts)\n\n        Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.remove_class', {selector: \"#obj\", class_name: \"class\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.remove_class', to=WINDOW, selector=\"#obj\", class_name=\"attr\")\n\n        :param string selector: HTML selector\n        :param string class_name: class to remove\n\n    */\n    window.DFSignals.connect('html.remove_attr', htmlRemoveAttr);\n    /*\"\"\"\n    .. function:: html.remove_attr(opts)\n\n        Remove an attribute from each element in the set of matched elements.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.remove_attr', {selector: \"#obj\", attr_name: \"attr\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.remove_attr', to=WINDOW, selector=\"#obj\", attr_name=\"attr\")\n\n        :param string selector: HTML selector\n        :param string attr_name: attribute to remove\n\n    */\n\n    window.DFSignals.connect('html.add_attribute', htmlAddAttribute);\n    /*\"\"\"\n    .. function:: html.add_attribute(opts)\n\n        Add an attribute to each element matched by the given selector.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.add_attribute', {selector: \"#obj\", attr_name: \"data-df\", attr_value: \"value\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.add_attribute', to=WINDOW, selector=\"#obj\", attr_name=\"data-df\", attr_value= \"value\")\n\n\n        :param string selector: HTML selector\n        :param string attr_name: name of the attribute to add\n        :param string attr_value: value of the attribute to add\n\n    */\n    window.DFSignals.connect('html.boolean_attribute', htmlBooleanAttribute);\n    /*\"\"\"\n    .. function:: html.boolean_attribute(opts)\n\n        Set or remove a boolean attribute. Always set the value of the added attribute to its name.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.boolean_attribute', {selector: \"#input\", name: \"checked\", value: true});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.boolean_attribute', to=WINDOW, selector=\"#input\", name=\"checked\", value=True)\n\n\n        :param string selector: HTML selector\n        :param string name: name of the attribute to add\n        :param string value: if True, add the attribute, if False, remove the attribute\n\n    */\n\n\n    window.DFSignals.connect('html.text', htmlText);\n    /*\"\"\"\n    .. function:: html.text(opts)\n\n        Set the text contents of the matched elements.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.text', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.text', to=WINDOW, selector=\"#obj\", content= \"<span>hello</span>\")\n\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.download_file', htmlDownloadFile);\n    /*\"\"\"\n    .. function:: html.download_file(opts)\n\n        Force the client to download the given file.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.download_file', {url: \"http://example.org/test.zip\", filename: \"test.zip\"});\n\n    .. code-block:: python\n\n        trigger(window_info, 'html.download_file', to=WINDOW, url=\"http://example.org/test.zip\", filename=\"test.zip\")\n\n        :param string url: URL of the file\n        :param string filename: name of the file\n\n    */\n\n\n    window.DFSignals.connect('html.focus', htmlFocus);\n    /*\"\"\"\n    .. function:: html.focus(opts)\n\n        Set the focus to the matched element.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.focus', {selector: \"#obj\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.focus', to=WINDOW, selector=\"#obj\")\n\n        :param string selector: HTML selector\n\n    */\n\n    window.DFSignals.connect('html.forms.set', htmlFormsSet);\n    /*\"\"\"\n    .. function:: html.forms.set(opts)\n\n        Set the value of a form input\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.forms.set', {selector: \"[name=title]\", value: \"new title\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.forms.set', to=WINDOW, selector=\"[name=title]\", value=\"new_title\")\n\n        :param string selector: HTML selector\n\n    */\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", connectSignals);\n"],"sourceRoot":""}