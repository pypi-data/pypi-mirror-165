import os
from typing import Union
from typing import Dict 
from typing import List
from typing import Optional

class Updater():
    def __new__(cls, base_file: Union[os.PathLike, str], output_file: Optional[Union[os.PathLike, str]] = None): ...

    def ids(self) -> List[str]: ...

    def update(self, mapping: Dict[str, Union[os.PathLike, str]]): ...

    def dimensions(self, id: str): ...
    
    def relative_dimensions(self, id: str, height: float): ...

class Dimensions():
    def width(self) -> float: ...

    def height(self) -> float: ...
