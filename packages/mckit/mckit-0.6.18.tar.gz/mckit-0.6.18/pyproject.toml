[tool.poetry]
name = "mckit"
version = "0.6.18"
description = "Tools to process MCNP models and results"
authors = ["rrn <r.rodionov@iterrf.ru>"]
maintainers = ["dpv2015 <dmitri_portnov@yahoo.com>"]
homepage = "https://github.com/MC-kit/mckit"
repository = "https://github.com/MC-kit/mckit"
documentation = "https://mckit.readthedocs.io"
license = "GPL3"
keywords = ["mckit", "MCNP"]
build = "build.py"
readme = "README.rst"
packages = [
    { include = "mckit" }
]
include = [
    "mckit/data/isotopes.dat",
]
exclude = [
#    "__pycache__",
    ".py[co]$",
]
# Select from PyPI classifiers: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
]


[tool.poetry.dependencies]
python = "^3.8,<3.11"   # TODO dvp: increase upper version bound along with scipy updates
DateTime = ">=4.3"
atomicwrites = ">=1.4.0"
attrs = ">=21.2.0"
click = ">=8.0.1"
colorama = ">=0.4.4"
loguru = ">=0.6.0"
mkl-devel = ">=2022.1.0"
numpy = ">=1.22.1"
ply = ">=3.11"
python-dotenv = ">=0.20.0"
scipy = ">=1.7.3"
sly = ">=0.4"
tomli = {version = ">=1.1.0", python="<3.11"}
tomli-w = ">=1.0.0"
tqdm = ">=4.55.1"

[tool.poetry.dev-dependencies]
Pygments = ">=2.7.2"
Sphinx = ">=5.0.0"
black = ">=22.1.0"
blacken-docs = ">=1.12.1"
cmake = ">=3.22.2"
codecov = ">=2.1.12"
coverage = {version = ">=6.3", extras = ["toml"]}
darglint = ">=1.5.5"
flake8 = ">=4.0.1"
flake8-annotations = ">=2.4.1"
flake8-black = ">=0.3.2"
flake8-bugbear = ">=22.3.23"
flake8-builtins = ">=1.5.3"
flake8-colors = ">=0.1.9"
flake8-commas = ">=2.1.0"
flake8-comprehensions = ">=3.10.0"
flake8-docstrings = ">=1.5.0"
flake8-import-order = ">=0.18.1"
flake8-print = ">=5.0.0"
flake8-rst-docstrings = ">=0.2.7"
flake8-use-fstring = ">=1.4"
isort = ">=5.7.0"
mypy = ">=0.950"
nox = ">=2022.1.7"
nox-poetry = ">=0.9.0"
numpydoc = ">=1.1.0"
pep8-naming = ">=0.13.2"
pre-commit = ">=2.17.0"
pydocstyle = ">=6.1.1"
pytest = ">=7.0.1"
pytest-benchmark = ">=3.4.1"
pytest-cov = ">=3.0.0"
pytest-mock = ">=3.7.0"
rstcheck = ">=5.0.0"
safety = ">=1.10.3"
sphinx-autobuild = ">=2021.3.14"
sphinx-autodoc-typehints = ">=1.16.0"
sphinx-autorun = ">=1.1.1"
sphinx-click = ">=4.0.0"
sphinx-rtd-theme = ">=1.0.0"
sphinxcontrib-napoleon = ">=0.7"
tryceratops = ">=1.1.0"
wheel = ">=0.35.1"
xdoctest = {extras = ["colors"], version = ">=1.0.0"}
yappi = ">=1.3.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
    "poetry-core>=1.0.7",
    "setuptools>=58.1.0",
]

[tool.poetry.scripts]
mckit = "mckit.cli.runner:mckit"

[tool.poetry.urls]
"Repository" = "https://github.com/MC-kit/mckit"
"Bug Tracker" = "https://github.com/MC-kit/mckit/issues"
# "Documentation" TODO


[tool.isort]
atomic = true
ensure_newline_before_comments = true
known_first_party = "mckit"
known_typing = "typing,types,typing_extensions,mypy,mypy_extensions"
sections = "FUTURE,TYPING,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
default_section = "FIRSTPARTY"
use_parentheses = true
multi_line_output = 3
line_length = 88
include_trailing_comma = true
lines_between_types = 1
skip_gitignore = true
skip = ["setup-generated.py", "setup.py"]
skip_glob = ["setup*.py", "*-example.py"]


# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
line-length = 88
target-version = ['py38']
include = '''
(
    \.pyi?$
)
'''
exclude = '''
(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.nox
  | \.venv
  | _build
  | build
  | build_configs
  | dist
  | 3rd-party
  | data
  | htmlcov
  | \.egg-info
  | mckit\.egg-info
  | _tab\.py$
  | notebooks
  | tutorial
  | wrk
)
'''

[tool.pytest.ini_options]
minversion = "6.0"
norecursedirs = ".* build dist *.egg-info data"
python_functions = "test_*  profile_*"
addopts = "-ra -q --tb=short --doctest-modules --strict-markers --ignore setup.py --failed-first"
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ALLOW_UNICODE ALLOW_BYTES"
testpaths = ["tests"]
markers = [
    "slow: too slow tests"
]
# xfail tests that pass should fail the test suite
xfail_strict = true





# [tool.coverage]
[tool.coverage.paths]
source = ["mckit", ".nox/*/site-packages"]

[tool.coverage.run]
branch = true
source = ["mckit"]
omit = ["*_tab.py"]


[tool.coverage.report]
show_missing = true
skip_covered = true
#fail_under = 80  # TODO dvp: increase limit to 100 with code maturing
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]
ignore_errors = true
sort = "Cover"

# TODO dvp: flake8 does not support pyproject configuring
#[tool.flake8]
##select = ANN,B,B9,BLK,C,D,DAR,E,F,I,S,W
#select = ['C', 'E', 'F', 'W']
#max-complexity = 10
#max-line-length = 88
#ignore = [
#    # E203: Whitespace before â€˜:'
#    "E203",
#    # E501: Line too long
#    "E501",
#    # W503: Line break before binary operator: for compatibility with black settings
#    "W503",
#    # import is controlled by isort
#    "I100",
#    "I202"
#]
#exclude = [
#    # No need to traverse our git directory
#    ".git",
#    # There's no value in checking cache directories
#    "__pycache__",
#    # The conf file is mostly autogenerated, ignore it
#    "docs/source/conf.py",
#    # Don't chek the adhoc, wrk directories
#    "adhoc",
#    "wrk",
#    # This contains our built documentation
#    "build",
#    # This contains builds of flake8 that we don't want to check
#    "dist",
#]
#per-file-ignores = [
#    "noxfile.py:ANN",
#    "tests/*:S101,ANN",
#]


# MyPy config
# See https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
python_version = 3.10
# strict = true     # TODO dvp: uncomment this to get strict control
follow_imports = "skip"
# namespace_packages = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
show_error_context = true
error_summary = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
files = "mckit/**/*.py"


[[tool.mypy.overrides]]
module = [
    "nox",
    "nox_poetry",
    "pandas",
    "pytest",
    "click",
    "click.testing",
    "loguru",
    "numpy.testing",
    "multipledispatch",
    "pkg_resources",
]
ignore_missing_imports = true
