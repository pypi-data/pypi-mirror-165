# generated by datamodel-codegen:
#   filename:  activity.json
#   timestamp: 2021-10-31T18:17:21+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel


class Activity(BaseModel):
    activityId: int
    activityParentId: int
    activityParentName: str
    calories: int
    description: str
    duration: int
    hasActiveZoneMinutes: bool
    hasStartTime: bool
    isFavorite: bool
    lastModified: str
    logId: int
    name: str
    startDate: str
    startTime: str
    steps: int


class Goals(BaseModel):
    activeMinutes: int
    caloriesOut: int
    distance: int
    floors: int
    steps: int


class Distance(BaseModel):
    activity: str
    distance: float


class HeartRateZone(BaseModel):
    caloriesOut: float
    max: int
    min: int
    minutes: int
    name: str


class Summary(BaseModel):
    activeScore: int
    activityCalories: int
    caloriesBMR: int
    caloriesOut: int
    distances: List[Distance]
    elevation: int
    fairlyActiveMinutes: int
    floors: int
    # TODO: Set this to optional dynamically
    heartRateZones: Optional[List[HeartRateZone]]
    lightlyActiveMinutes: int
    marginalCalories: int
    # TODO: Set this to optional dynamically
    restingHeartRate: Optional[int]
    sedentaryMinutes: int
    steps: int
    veryActiveMinutes: int


class ActivityResponse(BaseModel):
    activities: List[Activity]
    goals: Goals
    summary: Summary
