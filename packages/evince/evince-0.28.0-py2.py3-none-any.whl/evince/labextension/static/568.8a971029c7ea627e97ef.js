(self.webpackChunkevince=self.webpackChunkevince||[]).push([[568],{580:(e,t,n)=>{var o=n(337),i=n(431),s=n(155);!function(){const e={type:"change"},t={type:"start"},n={type:"end"};class o extends s.EventDispatcher{constructor(o,i){super(),void 0===i&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),i===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=o,this.domElement=i,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new s.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:s.MOUSE.ROTATE,MIDDLE:s.MOUSE.DOLLY,RIGHT:s.MOUSE.PAN},this.touches={ONE:s.TOUCH.ROTATE,TWO:s.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return h.phi},this.getAzimuthalAngle=function(){return h.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",X),this._domElementKeyEvents=e},this.saveState=function(){a.target0.copy(a.target),a.position0.copy(a.object.position),a.zoom0=a.object.zoom},this.reset=function(){a.target.copy(a.target0),a.object.position.copy(a.position0),a.object.zoom=a.zoom0,a.object.updateProjectionMatrix(),a.dispatchEvent(e),a.update(),c=r.NONE},this.update=function(){const t=new s.Vector3,n=(new s.Quaternion).setFromUnitVectors(o.up,new s.Vector3(0,1,0)),i=n.clone().invert(),b=new s.Vector3,v=new s.Quaternion,f=2*Math.PI;return function(){const o=a.object.position;t.copy(o).sub(a.target),t.applyQuaternion(n),h.setFromVector3(t),a.autoRotate&&c===r.NONE&&P(2*Math.PI/60/60*a.autoRotateSpeed),a.enableDamping?(h.theta+=d.theta*a.dampingFactor,h.phi+=d.phi*a.dampingFactor):(h.theta+=d.theta,h.phi+=d.phi);let s=a.minAzimuthAngle,g=a.maxAzimuthAngle;return isFinite(s)&&isFinite(g)&&(s<-Math.PI?s+=f:s>Math.PI&&(s-=f),g<-Math.PI?g+=f:g>Math.PI&&(g-=f),h.theta=s<=g?Math.max(s,Math.min(g,h.theta)):h.theta>(s+g)/2?Math.max(s,h.theta):Math.min(g,h.theta)),h.phi=Math.max(a.minPolarAngle,Math.min(a.maxPolarAngle,h.phi)),h.makeSafe(),h.radius*=u,h.radius=Math.max(a.minDistance,Math.min(a.maxDistance,h.radius)),!0===a.enableDamping?a.target.addScaledVector(p,a.dampingFactor):a.target.add(p),t.setFromSpherical(h),t.applyQuaternion(i),o.copy(a.target).add(t),a.object.lookAt(a.target),!0===a.enableDamping?(d.theta*=1-a.dampingFactor,d.phi*=1-a.dampingFactor,p.multiplyScalar(1-a.dampingFactor)):(d.set(0,0,0),p.set(0,0,0)),u=1,!!(m||b.distanceToSquared(a.object.position)>l||8*(1-v.dot(a.object.quaternion))>l)&&(a.dispatchEvent(e),b.copy(a.object.position),v.copy(a.object.quaternion),m=!1,!0)}}(),this.dispose=function(){a.domElement.removeEventListener("contextmenu",Z),a.domElement.removeEventListener("pointerdown",H),a.domElement.removeEventListener("pointercancel",Y),a.domElement.removeEventListener("wheel",W),a.domElement.removeEventListener("pointermove",U),a.domElement.removeEventListener("pointerup",G),null!==a._domElementKeyEvents&&a._domElementKeyEvents.removeEventListener("keydown",X)};const a=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let c=r.NONE;const l=1e-6,h=new s.Spherical,d=new s.Spherical;let u=1;const p=new s.Vector3;let m=!1;const b=new s.Vector2,v=new s.Vector2,f=new s.Vector2,g=new s.Vector2,x=new s.Vector2,w=new s.Vector2,y=new s.Vector2,E=new s.Vector2,C=new s.Vector2,M=[],A={};function O(){return Math.pow(.95,a.zoomSpeed)}function P(e){d.theta-=e}function _(e){d.phi-=e}const S=function(){const e=new s.Vector3;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),p.add(e)}}(),L=function(){const e=new s.Vector3;return function(t,n){!0===a.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(a.object.up,e)),e.multiplyScalar(t),p.add(e)}}(),T=function(){const e=new s.Vector3;return function(t,n){const o=a.domElement;if(a.object.isPerspectiveCamera){const i=a.object.position;e.copy(i).sub(a.target);let s=e.length();s*=Math.tan(a.object.fov/2*Math.PI/180),S(2*t*s/o.clientHeight,a.object.matrix),L(2*n*s/o.clientHeight,a.object.matrix)}else a.object.isOrthographicCamera?(S(t*(a.object.right-a.object.left)/a.object.zoom/o.clientWidth,a.object.matrix),L(n*(a.object.top-a.object.bottom)/a.object.zoom/o.clientHeight,a.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),a.enablePan=!1)}}();function V(e){a.object.isPerspectiveCamera?u/=e:a.object.isOrthographicCamera?(a.object.zoom=Math.max(a.minZoom,Math.min(a.maxZoom,a.object.zoom*e)),a.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),a.enableZoom=!1)}function B(e){a.object.isPerspectiveCamera?u*=e:a.object.isOrthographicCamera?(a.object.zoom=Math.max(a.minZoom,Math.min(a.maxZoom,a.object.zoom/e)),a.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),a.enableZoom=!1)}function R(e){b.set(e.clientX,e.clientY)}function I(e){g.set(e.clientX,e.clientY)}function D(){if(1===M.length)b.set(M[0].pageX,M[0].pageY);else{const e=.5*(M[0].pageX+M[1].pageX),t=.5*(M[0].pageY+M[1].pageY);b.set(e,t)}}function N(){if(1===M.length)g.set(M[0].pageX,M[0].pageY);else{const e=.5*(M[0].pageX+M[1].pageX),t=.5*(M[0].pageY+M[1].pageY);g.set(e,t)}}function k(){const e=M[0].pageX-M[1].pageX,t=M[0].pageY-M[1].pageY,n=Math.sqrt(e*e+t*t);y.set(0,n)}function j(e){if(1==M.length)v.set(e.pageX,e.pageY);else{const t=Q(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);v.set(n,o)}f.subVectors(v,b).multiplyScalar(a.rotateSpeed);const t=a.domElement;P(2*Math.PI*f.x/t.clientHeight),_(2*Math.PI*f.y/t.clientHeight),b.copy(v)}function F(e){if(1===M.length)x.set(e.pageX,e.pageY);else{const t=Q(e),n=.5*(e.pageX+t.x),o=.5*(e.pageY+t.y);x.set(n,o)}w.subVectors(x,g).multiplyScalar(a.panSpeed),T(w.x,w.y),g.copy(x)}function z(e){const t=Q(e),n=e.pageX-t.x,o=e.pageY-t.y,i=Math.sqrt(n*n+o*o);E.set(0,i),C.set(0,Math.pow(E.y/y.y,a.zoomSpeed)),V(C.y),y.copy(E)}function H(e){!1!==a.enabled&&(0===M.length&&(a.domElement.setPointerCapture(e.pointerId),a.domElement.addEventListener("pointermove",U),a.domElement.addEventListener("pointerup",G)),function(e){M.push(e)}(e),"touch"===e.pointerType?function(e){switch(q(e),M.length){case 1:switch(a.touches.ONE){case s.TOUCH.ROTATE:if(!1===a.enableRotate)return;D(),c=r.TOUCH_ROTATE;break;case s.TOUCH.PAN:if(!1===a.enablePan)return;N(),c=r.TOUCH_PAN;break;default:c=r.NONE}break;case 2:switch(a.touches.TWO){case s.TOUCH.DOLLY_PAN:if(!1===a.enableZoom&&!1===a.enablePan)return;a.enableZoom&&k(),a.enablePan&&N(),c=r.TOUCH_DOLLY_PAN;break;case s.TOUCH.DOLLY_ROTATE:if(!1===a.enableZoom&&!1===a.enableRotate)return;a.enableZoom&&k(),a.enableRotate&&D(),c=r.TOUCH_DOLLY_ROTATE;break;default:c=r.NONE}break;default:c=r.NONE}c!==r.NONE&&a.dispatchEvent(t)}(e):function(e){let n;switch(e.button){case 0:n=a.mouseButtons.LEFT;break;case 1:n=a.mouseButtons.MIDDLE;break;case 2:n=a.mouseButtons.RIGHT;break;default:n=-1}switch(n){case s.MOUSE.DOLLY:if(!1===a.enableZoom)return;!function(e){y.set(e.clientX,e.clientY)}(e),c=r.DOLLY;break;case s.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===a.enablePan)return;I(e),c=r.PAN}else{if(!1===a.enableRotate)return;R(e),c=r.ROTATE}break;case s.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===a.enableRotate)return;R(e),c=r.ROTATE}else{if(!1===a.enablePan)return;I(e),c=r.PAN}break;default:c=r.NONE}c!==r.NONE&&a.dispatchEvent(t)}(e))}function U(e){!1!==a.enabled&&("touch"===e.pointerType?function(e){switch(q(e),c){case r.TOUCH_ROTATE:if(!1===a.enableRotate)return;j(e),a.update();break;case r.TOUCH_PAN:if(!1===a.enablePan)return;F(e),a.update();break;case r.TOUCH_DOLLY_PAN:if(!1===a.enableZoom&&!1===a.enablePan)return;!function(e){a.enableZoom&&z(e),a.enablePan&&F(e)}(e),a.update();break;case r.TOUCH_DOLLY_ROTATE:if(!1===a.enableZoom&&!1===a.enableRotate)return;!function(e){a.enableZoom&&z(e),a.enableRotate&&j(e)}(e),a.update();break;default:c=r.NONE}}(e):function(e){switch(c){case r.ROTATE:if(!1===a.enableRotate)return;!function(e){v.set(e.clientX,e.clientY),f.subVectors(v,b).multiplyScalar(a.rotateSpeed);const t=a.domElement;P(2*Math.PI*f.x/t.clientHeight),_(2*Math.PI*f.y/t.clientHeight),b.copy(v),a.update()}(e);break;case r.DOLLY:if(!1===a.enableZoom)return;!function(e){E.set(e.clientX,e.clientY),C.subVectors(E,y),C.y>0?V(O()):C.y<0&&B(O()),y.copy(E),a.update()}(e);break;case r.PAN:if(!1===a.enablePan)return;!function(e){x.set(e.clientX,e.clientY),w.subVectors(x,g).multiplyScalar(a.panSpeed),T(w.x,w.y),g.copy(x),a.update()}(e)}}(e))}function G(e){K(e),0===M.length&&(a.domElement.releasePointerCapture(e.pointerId),a.domElement.removeEventListener("pointermove",U),a.domElement.removeEventListener("pointerup",G)),a.dispatchEvent(n),c=r.NONE}function Y(e){K(e)}function W(e){!1!==a.enabled&&!1!==a.enableZoom&&c===r.NONE&&(e.preventDefault(),a.dispatchEvent(t),function(e){e.deltaY<0?B(O()):e.deltaY>0&&V(O()),a.update()}(e),a.dispatchEvent(n))}function X(e){!1!==a.enabled&&!1!==a.enablePan&&function(e){let t=!1;switch(e.code){case a.keys.UP:T(0,a.keyPanSpeed),t=!0;break;case a.keys.BOTTOM:T(0,-a.keyPanSpeed),t=!0;break;case a.keys.LEFT:T(a.keyPanSpeed,0),t=!0;break;case a.keys.RIGHT:T(-a.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),a.update())}(e)}function Z(e){!1!==a.enabled&&e.preventDefault()}function K(e){delete A[e.pointerId];for(let t=0;t<M.length;t++)if(M[t].pointerId==e.pointerId)return void M.splice(t,1)}function q(e){let t=A[e.pointerId];void 0===t&&(t=new s.Vector2,A[e.pointerId]=t),t.set(e.pageX,e.pageY)}function Q(e){const t=e.pointerId===M[0].pointerId?M[1]:M[0];return A[t.pointerId]}a.domElement.addEventListener("contextmenu",Z),a.domElement.addEventListener("pointerdown",H),a.domElement.addEventListener("pointercancel",Y),a.domElement.addEventListener("wheel",W,{passive:!1}),this.update()}}s.MapControls=class extends o{constructor(e,t){super(e,t),this.screenSpacePanning=!1,this.mouseButtons.LEFT=s.MOUSE.PAN,this.mouseButtons.RIGHT=s.MOUSE.ROTATE,this.touches.ONE=s.TOUCH.PAN,this.touches.TWO=s.TOUCH.DOLLY_ROTATE}},s.OrbitControls=o}();class a{static createButton(e,t){t&&console.error('THREE.VRButton: The "options" parameter has been removed. Please set the reference space type via renderer.xr.setReferenceSpaceType() instead.');const n=document.createElement("button");function o(){n.style.display="",n.style.cursor="auto",n.style.left="calc(50% - 75px)",n.style.width="150px",n.onmouseenter=null,n.onmouseleave=null,n.onclick=null}function i(e){e.style.position="absolute",e.style.bottom="10px",e.style.padding="6px 3px",e.style.border="1px solid #fff",e.style.borderRadius="1px",e.style.background="rgba(0,0,0,0.1)",e.style.color="#fff",e.style.font="normal 7px sans-serif",e.style.textAlign="center",e.style.opacity="0.5",e.style.outline="none",e.style.zIndex="999"}if("xr"in navigator)return n.id="VRButton",n.style.display="none",i(n),navigator.xr.isSessionSupported("immersive-vr").then((function(t){t?function(){let t=null;async function o(o){o.addEventListener("end",i),await e.xr.setSession(o),n.textContent="EXIT VR",t=o}function i(){t.removeEventListener("end",i),n.textContent="ENTER VR",t=null}n.style.display="",n.style.cursor="pointer",n.style.left="calc(50% - 50px)",n.style.width="100px",n.textContent="ENTER VR",n.onmouseenter=function(){n.style.opacity="1.0"},n.onmouseleave=function(){n.style.opacity="0.5"},n.onclick=function(){if(null===t){const e={optionalFeatures:["local-floor","bounded-floor","hand-tracking","layers"]};navigator.xr.requestSession("immersive-vr",e).then(o)}else t.end()}}():(o(),n.textContent="VR NOT SUPPORTED"),t&&a.xrSessionIsGranted&&n.click()})).catch((function(e){o(),console.warn("Exception when trying to call xr.isSessionSupported",e),n.textContent="VR NOT ALLOWED"})),n;{const e=document.createElement("a");return!1===window.isSecureContext?(e.href=document.location.href.replace(/^http:/,"https:"),e.innerHTML="WEBXR NEEDS HTTPS"):(e.href="https://immersiveweb.dev/",e.innerHTML="WEBXR NOT AVAILABLE"),e.style.left="calc(50% - 90px)",e.style.width="180px",e.style.textDecoration="none",i(e),e}}static xrSessionIsGranted=!1;static registerSessionGrantedListener(){if("xr"in navigator){if(/WebXRViewer\//i.test(navigator.userAgent))return;navigator.xr.addEventListener("sessiongranted",(()=>{a.xrSessionIsGranted=!0}))}}}a.registerSessionGrantedListener();var r=o.DOMWidgetModel.extend({defaults:i.extend(o.DOMWidgetModel.prototype.defaults(),{_model_name:"BraketModel",_view_name:"BraketView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.24.0",_view_module_version:"0.24.0"})}),c=o.DOMWidgetView.extend({render:function(){console.log("Hello from BraketView 2");const e=new s.Scene;this.scene=e;let t=new s.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);this.camera=t,t.position.z=5;const n=new s.WebGLRenderer;this.renderer=n,this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(986927,1),this.renderer.antialias=!0,this.el.appendChild(a.createButton(this.renderer)),this.renderer.xr.enabled=!0,new s.OrbitControls(this.camera,this.renderer.domElement),this.init_changed(),this.el.append(this.renderer.domElement),this.ao_changed(),this.model.on("change:init",this.init_changed,this),this.model.on("change:ao",this.ao_changed,this),n.setAnimationLoop((function(){for(let t=0;t<e.children.length;t++)performance.now(),e.children[t].material.uniforms.time.value+=.01;n.render(e,t)}))},init_changed:function(){this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors")},pos_changed:function(){this.pos=this.model.get("pos");for(let e=0;e<this.pos.length;e++){let t=this.pos[e],n=this.scene.children[e];n.position.x=t[0],n.position.y=t[1],n.position.z=t[2]}},surf_changed:function(){this.surf=this.model.get("surf");for(let e=0;e<this.surf.length;e++){let e=new s.ShaderMaterial({uniforms:{time:{value:0},resolution:{value:new s.Vector2}},vertexShader:"uniform float time;\n            uniform vec2 resolution;\n            varying vec2 vUv;\n            varying vec3 pos;\n            varying vec3 tex;\n\n            void main() {\n                vUv = uv;\n                pos = vec3(position.x, position.y, position.z);\n                tex = vec3(position.x+time, position.y, position.z);\n                //pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n            }",fragmentShader:"uniform vec3 user_color;\nuniform float time;\n\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\nvarying float q;\n\nvoid main() {\n\nvec2 p = vUv;\nfloat q = tex[0]*tex[0] + tex[1]*tex[1] + tex[2]*tex[2];\n\n    gl_FragColor = gl_FragColor + .01*vec4(.5 + 1.7369481664870148*sqrt(15)*pow(3.141592653589793, -0.75)*tex[2]*(pow(tex[0], 2) - pow(tex[1], 2))*exp(-pow(tex[0], 2) - pow(tex[1], 2) - pow(tex[2], 2)), 0.2, 0.5, 0.5);\n}",side:s.DoubleSide,blending:s.SubtractiveBlending});e.depthWrite=!1;let t=new s.BufferGeometry;t.setIndex(this.surf[1]),t.setAttribute("position",new s.Float32BufferAttribute(this.surf[0],3)),new s.Mesh(t,e)}},ao_changed:function(){this.ao=this.model.get("ao");var e=this.model.get("fragment_shader");let t=new s.SphereBufferGeometry(.3),n=(new s.InstancedBufferGeometry).copy(t);n.maxInstancedCount=120;let o=[],i=[];for(let e=0;e<120;e++)i.push(0,0,0),o.push(.03*(e**1.1+.1),0,0);let a=new Float32Array(i);n.setAttribute("aCurve",new s.InstancedBufferAttribute(a,3,!1));let r=new Float32Array(o);n.setAttribute("aRadius",new s.InstancedBufferAttribute(r,3,!1)),this.instancedGeometry=n;let c=new s.ShaderMaterial({fragmentShader:e,vertexShader:"// Define the attributes\nvarying vec3 vColor;\nvarying vec3 tex;\nvarying vec2 vUv;\n\nattribute vec3 aRadius;\nattribute vec3 aCurve;\n\nvoid main(){\nvec3 transformed = position*aRadius.x*length(cameraPosition);\ntex = vec3(transformed.x, transformed.y, transformed.z) + cameraPosition;\n\n\n// 3. Get position and add it to the final position\n//vec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n\n//transformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(tex, 1.0);\n//vColor = aColor;\n//vPis = gl_position;\n}",uniforms:{time:{value:0},resolution:{value:new s.Vector2}},side:s.BackSide,blending:s.AdditiveBlending});c.depthWrite=!1;let l=new s.InstancedMesh(n,c,120);l.instanceMatrix.needsUpdate=!0,this.scene.add(l)}}),l=o.DOMWidgetModel.extend({defaults:i.extend(o.DOMWidgetModel.prototype.defaults(),{_model_name:"MDModel",_view_name:"MDView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.24.0",_view_module_version:"0.24.0"})}),h=o.DOMWidgetView.extend({render:function(){const e=new s.Scene;this.scene=e;let t=new s.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);this.camera=t,this.camera.position.z=5;const n=new s.WebGLRenderer;this.renderer=n,this.el.appendChild(a.createButton(this.renderer)),this.renderer.setAnimationLoop((function(){n.render(e,t)})),this.renderer.setSize(.5*window.innerWidth,.5*window.innerHeight),this.renderer.setClearColor(986927,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let o=new s.OrbitControls(this.camera,this.renderer.domElement);this.controls=o,this.init_changed(),this.el.append(this.renderer.domElement),this.pos_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this),n.setAnimationLoop((function(){n.render(e,t)}))},init_changed:function(){console.log("init change"),this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.box.length>2&&(this.camera.position.z=2*Math.abs(this.box[2]));let e=new s.SphereBufferGeometry(.3),t=(new s.InstancedBufferGeometry).copy(e),n=this.pos.length;t.maxInstancedCount=n;let o=[],i=[];if(2==this.box.length){for(let e=0;e<n;e++)i.push(this.pos[e][0],this.pos[e][1]),o.push(this.colors[e][0],this.colors[e][1],this.colors[e][2]);let e=new Float32Array(i);t.setAttribute("aCurve",new s.InstancedBufferAttribute(e,3,!1));var a="attribute vec3 aColor;\nvarying vec3 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\n\nvoid main(){\nvec3 transformed = position;\n\n// 2. Extract values from attribute\n//float aRadius = aCurve.x;\n\n\n// 3. Get position and add it to the final position\nvec3 curvePosition = vec3(aCurve.x, aCurve.y, 0.0);\n\ntransformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\nvColor = aColor;\n//vPis = gl_position;\n}"}if(3==this.box.length){for(let e=0;e<n;e++)i.push(this.pos[e][0],this.pos[e][1],this.pos[e][2]),o.push(this.colors[e][0],this.colors[e][1],this.colors[e][2]);let e=new Float32Array(i);t.setAttribute("aCurve",new s.InstancedBufferAttribute(e,3,!1)),a="attribute vec3 aColor;\nvarying vec3 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\n\nvoid main(){\nvec3 transformed = position;\n\n// 2. Extract values from attribute\n//float aRadius = aCurve.x;\n\n\n// 3. Get position and add it to the final position\nvec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n\ntransformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\nvColor = aColor;\n//vPis = gl_position;\n}"}let r=new Float32Array(o);t.setAttribute("aColor",new s.InstancedBufferAttribute(r,3,!1)),this.instancedGeometry=t;let c=new s.ShaderMaterial({fragmentShader:"varying vec3 vColor;\nvoid main(){\ngl_FragColor = gl_FragColor + vec4(vColor, 1.0);\n}",vertexShader:a}),l=new s.InstancedMesh(t,c,n);if(l.instanceMatrix.needsUpdate=!0,this.scene.add(l),this.box.length>2){if(this.box[0]>0){let e=new s.PlaneGeometry(2*Math.abs(this.box[1]),2*Math.abs(this.box[2])),t=new s.MeshBasicMaterial({color:"rgba(110,110,100)",side:s.BackSide});t.opacity=.2,t.transparent=!0,t.blending=s.AdditiveBlending;let n=new s.Mesh(e,t);n.rotation.x=0,n.position.x=this.box[0],n.rotation.y=1.57075,n.rotation.x=1.57075,this.scene.add(n),n=new s.Mesh(e,t),n.rotation.x=0,n.position.x=-this.box[0],n.rotation.y=-1.57075,n.rotation.x=1.57075,this.scene.add(n)}if(this.box[1]>0){let e=new s.PlaneGeometry(2*Math.abs(this.box[0]),2*Math.abs(this.box[2])),t=new s.MeshBasicMaterial({color:"rgba(120,120,110)",side:s.BackSide});t.opacity=.2,t.transparent=!0,t.blending=s.AdditiveBlending;let n=new s.Mesh(e,t);n.rotation.y=0,n.position.y=-this.box[1],n.rotation.x=1.57075,n.rotation.z=0,this.scene.add(n),n=new s.Mesh(e,t),n.rotation.y=0,n.position.y=this.box[1],n.rotation.x=-1.57075,n.rotation.z=0,this.scene.add(n)}if(this.box[2]>0){let e=new s.PlaneGeometry(2*Math.abs(this.box[0]),2*Math.abs(this.box[1])),t=new s.MeshBasicMaterial({color:"rgba(135,135,125)",side:s.BackSide});t.opacity=.2,t.transparent=!0,t.blending=s.AdditiveBlending;let n=new s.Mesh(e,t);n.position.z=this.box[2],this.scene.add(n),n=new s.Mesh(e,t),n.rotation.x=3.1415,n.position.z=-this.box[2],this.scene.add(n)}let e=[];e.push(new s.Vector3(this.box[0],this.box[1],this.box[2])),e.push(new s.Vector3(this.box[0],-this.box[1],this.box[2])),e.push(new s.Vector3(-this.box[0],-this.box[1],this.box[2])),e.push(new s.Vector3(-this.box[0],this.box[1],this.box[2])),e.push(new s.Vector3(this.box[0],this.box[1],this.box[2]));let t=(new s.BufferGeometry).setFromPoints(e),n=new s.Line(t,new s.LineBasicMaterial({color:16447724}));this.scene.add(n),e=[],e.push(new s.Vector3(this.box[0],this.box[1],-this.box[2])),e.push(new s.Vector3(this.box[0],-this.box[1],-this.box[2])),e.push(new s.Vector3(-this.box[0],-this.box[1],-this.box[2])),e.push(new s.Vector3(-this.box[0],this.box[1],-this.box[2])),e.push(new s.Vector3(this.box[0],this.box[1],-this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),n=new s.Line(t,new s.LineBasicMaterial({color:16447724})),this.scene.add(n),e=[],e.push(new s.Vector3(this.box[0],this.box[1],-this.box[2])),e.push(new s.Vector3(this.box[0],this.box[1],this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),n=new s.Line(t,new s.LineBasicMaterial({color:16447724})),this.scene.add(n),e=[],e.push(new s.Vector3(this.box[0],-this.box[1],-this.box[2])),e.push(new s.Vector3(this.box[0],-this.box[1],this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),n=new s.Line(t,new s.LineBasicMaterial({color:16447724})),this.scene.add(n),e=[],e.push(new s.Vector3(-this.box[0],this.box[1],-this.box[2])),e.push(new s.Vector3(-this.box[0],this.box[1],this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),n=new s.Line(t,new s.LineBasicMaterial({color:16447724})),this.scene.add(n),e=[],e.push(new s.Vector3(-this.box[0],-this.box[1],-this.box[2])),e.push(new s.Vector3(-this.box[0],-this.box[1],this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),n=new s.Line(t,new s.LineBasicMaterial({color:16447724})),this.scene.add(n)}let h=new s.AmbientLight(2105376,5);this.scene.add(h);const d=new s.DirectionalLight(16777215,.5);d.position.set(1,1,1),this.scene.add(d)},pos_changed:function(){this.pos=this.model.get("pos");let e=this.scene.children[0],t=(new s.Matrix4,[]);if(this.box.length>2){for(let n=0;n<e.count;n++)t.push(this.pos[n][0],this.pos[n][1],this.pos[n][2]);let n=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(n,3,!1))}if(2==this.box.length){for(let n=0;n<e.count;n++)t.push(this.pos[n][0],this.pos[n][1]);let n=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(n,2,!1))}}}),d=o.DOMWidgetModel.extend({defaults:i.extend(o.DOMWidgetModel.prototype.defaults(),{_model_name:"LatticeModel",_view_name:"LatticeView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.24.0",_view_module_version:"0.24.0"})}),u=o.DOMWidgetView.extend({render:function(){const e=new s.Scene;this.scene=e;let t=new s.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);this.camera=t,this.camera.position.z=5;const n=new s.WebGLRenderer;this.renderer=n,this.el.appendChild(a.createButton(this.renderer)),this.renderer.setAnimationLoop((function(){n.render(e,t)})),this.renderer.setSize(.5*window.innerWidth,.5*window.innerHeight),this.renderer.setClearColor(986927,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let o=new s.OrbitControls(this.camera,this.renderer.domElement);this.controls=o,this.init_changed(),this.el.append(this.renderer.domElement),this.pos_changed(),this.state_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this),this.model.on("change:state",this.state_changed,this),n.setAnimationLoop((function(){n.render(e,t)}))},init_changed:function(){this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.state=this.model.get("state"),this.box.length>2&&(this.camera.position.z=2*Math.abs(this.box[2]));let e=new s.SphereBufferGeometry(.3),t=(new s.InstancedBufferGeometry).copy(e),n=this.state.length;t.maxInstancedCount=n;let o=[];if(2==this.box.length){let e=[];for(let t=0;t<n;t++)e.push(this.state[t],this.state[t]);let a=new Float32Array(e);t.setAttribute("aState",new s.InstancedBufferAttribute(a,2,!1));for(let e=0;e<n;e++)o.push(this.pos[e][0],this.pos[e][1],0);let r=new Float32Array(o);t.setAttribute("aCurve",new s.InstancedBufferAttribute(r,3,!1));var i="attribute vec3 aColor;\nvarying vec4 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\nattribute vec2 aState;\n\nvec3 getColor(float stateValue){\n  \n  vec3 pos = vec3(0.);\n  pos.x += cos(.01*stateValue );\n  pos.y += 0.0; // sin(progress *PI*8.) * radius + sin(progress * PI *2.) * 30.;\n  pos.z += 0.0; // progress *200. - 200./2. + offset;\n  \n  return pos;\n}\n\nvoid main(){\n  vec3 transformed = position;\n  \n  // 2. Extract values from attribute\n  //float aRadius = aCurve.x;\n\n  \n  // 3. Get position and add it to the final position\n  vec3 curvePosition = vec3(aCurve.x, aCurve.y, 0.0);\n   \n  \n\n  transformed += curvePosition;\n  \n  gl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\n  //vColor = aColor;\n  //vColor = getColor(aState);\n  vColor = vec4(aState.x/2.0, 2.0-aState.y, .1*aState.y, aState.y); //aState.y);\n  //vPis = gl_position;\n}"}if(3==this.box.length){let e=[];for(let t=0;t<n;t++)e.push(this.state[t],this.state[t]);let a=new Float32Array(e);t.setAttribute("aState",new s.InstancedBufferAttribute(a,2,!1));for(let e=0;e<n;e++)o.push(this.pos[e][0],this.pos[e][1],this.pos[e][2]);let r=new Float32Array(o);t.setAttribute("aCurve",new s.InstancedBufferAttribute(r,3,!1)),i="attribute vec3 aColor;\nvarying vec4 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\nattribute vec2 aState;\n\nvec4 getColor(vec2 stateValue){\n  \n  vec4 pos = vec4(0.3);\n  pos.x = .5*(1.0 + cos(6.0*stateValue.x));\n  pos.y = .5*(1.0 + sin(stateValue.x)); // (1.0+sin(stateValue *3.14*8.0);\n  pos.z = .5*(1.0 + cos(24.0*stateValue.x + 0.5));\n  //pos.z += .5*(1.0+cos(3.14*stateValue +.5);\n  pos.w = stateValue.y;\n  \n  return pos;\n}\n\nvoid main(){\n  vec3 transformed = position;\n  \n  // 2. Extract values from attribute\n  //float aRadius = aCurve.x;\n\n  \n  // 3. Get position and add it to the final position\n  vec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n   \n  \n\n  transformed += curvePosition;\n  \n  gl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\n  vColor = getColor(aState);\n  //vColor = vec4(aState.x/2.0, 2.0-aState.y, .1*aState.y, aState.y); //aState.y);\n\n}"}let a=new Float32Array([]);t.setAttribute("aColor",new s.InstancedBufferAttribute(a,3,!1)),this.instancedGeometry=t;let r=new s.ShaderMaterial({fragmentShader:"varying vec4 vColor;\nvoid main(){\n  gl_FragColor = gl_FragColor + .5*vColor; //vec4(vColor, 1.0);\n}",vertexShader:i,blending:s.AdditiveBlending});r.depthWrite=!1,r.side=s.FrontSide;let c=new s.InstancedMesh(t,r,n);c.instanceMatrix.needsUpdate=!0,this.scene.add(c);let l=new s.AmbientLight(2105376,5);this.scene.add(l);const h=new s.DirectionalLight(16777215,.5);h.position.set(1,1,1),this.scene.add(h)},pos_changed:function(){this.pos=this.model.get("pos");let e=this.scene.children[0],t=(new s.Matrix4,[]);if(this.box.length>2){for(let n=0;n<e.count;n++)t.push(this.pos[n][0],this.pos[n][1],this.pos[n][2]);let n=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(n,3,!1))}if(2==this.box.length){for(let n=0;n<e.count;n++)t.push(this.pos[n][0],this.pos[n][1]);let n=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(n,2,!1))}},state_changed:function(){this.state=this.model.get("state");let e=this.scene.children[0],t=(new s.Matrix4,[]);for(let n=0;n<e.count;n++)t.push(this.state[n],this.state[n]);let n=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aState",new s.InstancedBufferAttribute(n,2,!1))}});e.exports={BraketModel:r,BraketView:c,MDModel:l,MDView:h,LatticeModel:d,LatticeView:u}},568:(e,t,n)=>{e.exports=n(580),e.exports.version="0.24.0"}}]);