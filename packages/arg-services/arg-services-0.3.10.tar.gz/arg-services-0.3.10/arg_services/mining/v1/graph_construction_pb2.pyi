"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import arg_services.graph.v1.graph_pb2
import arg_services.mining.v1.adu_pb2
import arg_services.mining.v1.entailment_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GraphConstructionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class AdusEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> arg_services.mining.v1.adu_pb2.Segment: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[arg_services.mining.v1.adu_pb2.Segment] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LANGUAGE_FIELD_NUMBER: builtins.int
    ADUS_FIELD_NUMBER: builtins.int
    MAJOR_CLAIM_ID_FIELD_NUMBER: builtins.int
    ENTAILMENTS_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    language: typing.Text
    @property
    def adus(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, arg_services.mining.v1.adu_pb2.Segment]: ...
    major_claim_id: typing.Text
    @property
    def entailments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arg_services.mining.v1.entailment_pb2.Entailment]: ...
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
        pass
    def __init__(self,
        *,
        language: typing.Text = ...,
        adus: typing.Optional[typing.Mapping[typing.Text, arg_services.mining.v1.adu_pb2.Segment]] = ...,
        major_claim_id: typing.Text = ...,
        entailments: typing.Optional[typing.Iterable[arg_services.mining.v1.entailment_pb2.Entailment]] = ...,
        extras: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras",b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["adus",b"adus","entailments",b"entailments","extras",b"extras","language",b"language","major_claim_id",b"major_claim_id"]) -> None: ...
global___GraphConstructionRequest = GraphConstructionRequest

class GraphConstructionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    GRAPH_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    @property
    def graph(self) -> arg_services.graph.v1.graph_pb2.Graph: ...
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
        pass
    def __init__(self,
        *,
        graph: typing.Optional[arg_services.graph.v1.graph_pb2.Graph] = ...,
        extras: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras",b"extras","graph",b"graph"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extras",b"extras","graph",b"graph"]) -> None: ...
global___GraphConstructionResponse = GraphConstructionResponse
