[tool.poetry]
name = "drf-tree-router"
version = "0.2.0"
description = "Create browsable routes by nesting routers in a tree-like structure."
authors = [
    "Matti Lamppu <lamppu.matti.akseli@gmail.com>",
]
packages = [
    { include = "tree_router" },
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/MrThearMan/drf-tree-router"
repository = "https://github.com/MrThearMan/drf-tree-router"
keywords = [
    "django",
    "djangorestframework",
    "drf",
    "router",
    "tree",
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Natural Language :: English",
]
include = [
    "README.md",
    "LICENSE",
]
exclude = [
    "tests",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MrThearMan/drf-tree-router/issues"

[tool.poetry.dependencies]
python = ">=3.7,<4"
Django = ">=3.0"
djangorestframework = ">=3.7.0"

[tool.poetry.dev-dependencies]
pytest = "7.1.2"
coverage = "6.4.4"
pytest-django = "4.5.2"
pre-commit = "2.20.0"
tox = "3.25.1"
tox-gh-actions = "2.9.1"
coveralls = "3.3.1"
mkdocs = "1.3.1"
pymdown-extensions = "9.5"
django-stubs = "1.12.0"
djangorestframework-stubs = "1.7.0"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = "True"
lines_after_imports = 2

[tool.pylint.MASTER]
ignore-paths = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]

[tool.pytest.ini_options]
addopts = "-vv -s --log-cli-level=INFO"

[tool.pylint.messages_control]
disable = [
    "bad-continuation",
    "bad-whitespace",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "logging-fstring-interpolation",
]

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.miscellaneous]
notes = [
    "BUG",
    "REFACTOR",
    "CHECK",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = "True"
warn_unused_configs = "True"
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[tool.django-stubs]
django_settings_module = "tests.django.settings"

[tool.coverage.run]
relative_files = true

[tool.coverage.report]
omit = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
    "pragma: no cover",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{37, 38, 39, 310}-django{30, 31, 32}, py{310, 311}-django{40, 41}
isolated_build = true

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
whitelist_externals =
    poetry
setenv =
    PYTHONPATH = {toxinidir}
    DJANGO_SETTINGS_MODULE = tests.django.settings
deps =
    django30: Django>=3.0,<3.1
    django31: Django>=3.1,<3.2
    django32: Django>=3.2,<3.3
    django40: Django>=4.0,<4.1
    django41: Django>=4.1,<4.2

    djangorestframework
    pytest
    coverage
    pytest-django
commands =
    coverage run -m pytest -vv -s --log-cli-level=INFO
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
