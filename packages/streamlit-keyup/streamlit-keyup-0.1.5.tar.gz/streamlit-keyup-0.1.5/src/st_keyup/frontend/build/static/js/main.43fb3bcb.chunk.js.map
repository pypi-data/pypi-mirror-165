{"version":3,"sources":["index.tsx"],"names":["onKeyUp","event","Streamlit","setComponentValue","target","value","events","addEventListener","RENDER_EVENT","window","rendered","data","detail","label","args","debounce_time","input","document","getElementsByTagName","label_el","innerText","onkeyup","debounce","setComponentReady","setFrameHeight"],"mappings":"oGAAA,yBASA,SAASA,EAAQC,GACfC,IAAUC,kBAAkBF,EAAMG,OAAOC,MAC1C,CA0CDH,IAAUI,OAAOC,iBAAiBL,IAAUM,cAnC5C,SAAkBP,GAEhB,IAAKQ,OAAOC,SAAU,CACpB,IAAMC,EAAQV,EAAkCW,OAE1CC,EAAgBF,EAAKG,KAAL,MAChBT,EAAgBM,EAAKG,KAAL,MAChBC,EAAwBJ,EAAKG,KAAL,SAExBE,EAAQC,SAASC,qBAAqB,SAAS,GAE/CC,EAAWF,SAASC,qBACxB,SACA,GAEEC,IACFA,EAASC,UAAYP,GAGnBR,IAAUW,EAAMX,QAClBW,EAAMX,MAAQA,GAIdW,EAAMK,QADJN,EAAgB,EACFO,YAAStB,EAASe,GAGlBf,EAGlBS,OAAOC,UAAW,CACnB,CACF,IAODR,IAAUqB,oBAIVrB,IAAUsB,eAAe,G","file":"static/js/main.43fb3bcb.chunk.js","sourcesContent":["import { Streamlit, RenderData } from \"streamlit-component-lib\"\nimport { debounce } from \"underscore\"\n\ndeclare global {\n  interface Window {\n    rendered: boolean\n  }\n}\n\nfunction onKeyUp(event: any): void {\n  Streamlit.setComponentValue(event.target.value)\n}\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\nfunction onRender(event: Event): void {\n  // Get the RenderData from the event\n  if (!window.rendered) {\n    const data = (event as CustomEvent<RenderData>).detail\n\n    const label: string = data.args[\"label\"]\n    const value: string = data.args[\"value\"]\n    const debounce_time: number = data.args[\"debounce\"]\n\n    const input = document.getElementsByTagName(\"input\")[0] as HTMLInputElement\n\n    const label_el = document.getElementsByTagName(\n      \"label\"\n    )[0] as HTMLLabelElement\n\n    if (label_el) {\n      label_el.innerText = label\n    }\n\n    if (value && !input.value) {\n      input.value = value\n    }\n\n    if (debounce_time > 0) {\n      input.onkeyup = debounce(onKeyUp, debounce_time)\n    }\n    else {\n      input.onkeyup = onKeyUp\n    }\n\n    window.rendered = true\n  }\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight(93)\n"],"sourceRoot":""}