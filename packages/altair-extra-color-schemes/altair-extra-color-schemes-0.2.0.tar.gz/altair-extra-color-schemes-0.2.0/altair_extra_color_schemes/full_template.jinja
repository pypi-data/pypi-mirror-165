{# Keep updated as per this template: https://github.com/altair-viz/altair/blob/v4.2.0/altair/utils/html.py#L84 #}
{# Format the template with Prettier, putting the outermost function arguments as strings to work. #}
<div id="{{ output_div }}"></div>
<script type="text/javascript">
  var VEGA_DEBUG = typeof VEGA_DEBUG == "undefined" ? {} : VEGA_DEBUG;
  (function (spec, embedOpt) {
    let outputDiv = document.currentScript.previousElementSibling;
    if (outputDiv.id !== "{{ output_div }}") {
      outputDiv = document.getElementById("{{ output_div }}");
    }
    const paths = {
      vega: "{{ base_url }}/vega@{{ vega_version }}?noext",
      "vega-lib": "{{ base_url }}/vega-lib?noext",
      "vega-lite": "{{ base_url }}/vega-lite@{{ vegalite_version }}?noext",
      "vega-embed": "{{ base_url }}/vega-embed@{{ vegaembed_version }}?noext",
    };
    function maybeLoadScript(lib, version) {
      var key = `${lib.replace("-", "")}_version`;
      return VEGA_DEBUG[key] == version
        ? Promise.resolve(paths[lib])
        : new Promise(function (resolve, reject) {
            var s = document.createElement("script");
            document.getElementsByTagName("head")[0].appendChild(s);
            s.async = true;
            s.onload = () => {
              VEGA_DEBUG[key] = version;
              return resolve(paths[lib]);
            };
            s.onerror = () => reject(`Error loading script: ${paths[lib]}`);
            s.src = paths[lib];
          });
    }
    function showError(err) {
      outputDiv.innerHTML = `<div class="error" style="color:red;">${err}</div>`;
      throw err;
    }
    function displayChart(vegaEmbed) {
      // Add additional color schemes here:
      vega.scheme("dvs") ??
        vega.scheme("dvs", [
          // "#26C6DA",
          "#0095A8",
          "#112E51",
          "#FF7043",
          "#78909C",
          "#2E78D2",
          "#006C7A",
          "#FFBEA9",
        ]);

      vegaEmbed(outputDiv, spec, embedOpt).catch((err) =>
        showError(
          `Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`
        )
      );
    }
    if (typeof define === "function" && define.amd) {
      requirejs.config({ paths });
      require(["vega-embed"], displayChart, (err) =>
        showError(`Error loading script: ${err.message}`));
    } else {
      maybeLoadScript("vega", "{{vega_version}}")
        .then(() => maybeLoadScript("vega-lite", "{{vegalite_version}}"))
        .then(() => maybeLoadScript("vega-embed", "{{vegaembed_version}}"))
        .catch(showError)
        .then(() => displayChart(vegaEmbed));
    }
  })({{ spec }}, {{ embed_options }});
</script>
