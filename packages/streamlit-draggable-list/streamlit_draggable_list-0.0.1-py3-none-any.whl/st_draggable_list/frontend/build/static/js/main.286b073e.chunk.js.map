{"version":3,"sources":["DraggableList.tsx","index.tsx"],"names":["defaultRenderItem","theme","item","Paper","sx","backgroundColor","padding","border","textColor","Typography","color","fontFamily","font","name","ContainerComponent","props","onDrop","e","setItems","arr","dropResult","initSort","removedIndex","addedIndex","payload","result","itemToAdd","splice","sort","a","b","order","map","idx","applyDrag","items","renderItem","id","DraggableList","React","useState","useEffect","Streamlit","setComponentValue","DraggableListComponent","renderData","useRenderData","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAaA,SAASA,EAAkBC,EAAcC,GACrC,OACI,cAACC,EAAA,EAAD,CACIC,GAAI,CACAC,gBAAiBJ,EAAMI,gBACvBC,QAAS,EACTC,OAAQ,aAAeN,EAAMO,WAJrC,SAOI,cAACC,EAAA,EAAD,CACIC,MAAOT,EAAMO,UACbG,WAAYV,EAAMW,KAFtB,SAIKV,EAAKW,QAIrB,CAED,IAmCMC,EAAsC,SAACC,GAAD,OAExC,cAAC,YAAD,CACIC,OAAQ,SAACC,GAAD,aAAmBF,EAAMG,SAtCvB,SAACC,EAAaC,EAAwBC,GACpD,IAAQC,EAAsCF,EAAtCE,aAAcC,EAAwBH,EAAxBG,WAAYC,EAAYJ,EAAZI,QAClC,GAAqB,OAAjBF,GAAwC,OAAfC,EAAqB,OAAOJ,EAEzD,IAAMM,EAAM,YAAON,GACfO,EAAYF,EAUhB,OARqB,OAAjBF,IACAI,EAAYD,EAAOE,OAAOL,EAAc,GAAG,IAG5B,OAAfC,GACAE,EAAOE,OAAOJ,EAAY,EAAGG,GAG7BL,EACOI,EAAOG,MAAK,SAACC,EAASC,GAAV,OAAsBD,EAAEE,MAAQD,EAAEC,KAAlC,IAEZN,EAAOO,KAAI,SAAC9B,EAAY+B,GAC3B,OAAO,2BAAK/B,GAAZ,IAAkB6B,MAAOE,GAC5B,GAER,CAgBiDC,CAAUnB,EAAMoB,MAAOlB,EAAd,UAAiBF,EAAMM,gBAAvB,UAA3C,EADZ,SAIQN,EAAMoB,MAAMH,KAAI,SAAC9B,GACb,OACI,cAAC,YAAD,UACKa,EAAMqB,WAAarB,EAAMqB,WAAWrB,EAAMd,MAAOC,GAAQF,EAAkBe,EAAMd,MAAOC,IAD7EA,EAAKmC,GAI5B,KAZ+B,EA0B7BC,EARwC,SAAAvB,GACnD,MAA0BwB,IAAMC,SAASzB,EAAMoB,OAA/C,mBAAOA,EAAP,KAAcjB,EAAd,KAIA,OAHAqB,IAAME,WAAU,WACZC,YAAUC,kBAAkBR,EAC/B,GAAE,CAACA,IACG,cAAC,EAAD,0CAA6BpB,GAA7B,IAAoCoB,QAAOjB,cACrD,ECrFK0B,EAAoC,WACxC,IAAMC,EAAyBC,0BAC/B,OACE,cAAC,EAAD,0CAAwBD,EAAWE,MAAnC,IAAyC,MAASF,EAAW5C,SAEhE,EAED+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,oBAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,Q","file":"static/js/main.286b073e.chunk.js","sourcesContent":["// (1) import Layer\nimport React from 'react';\nimport { Streamlit, Theme } from 'streamlit-component-lib';\nimport { Container, Draggable, DropResult } from 'react-smooth-dnd';\nimport { Paper, Typography } from '@mui/material';\n\n// (2) Types Layer\nexport interface Item {\n    id: string\n    name: string\n    order: number\n}\n\nfunction defaultRenderItem(theme: Theme, item: Item): React.ReactElement {\n    return (\n        <Paper\n            sx={{\n                backgroundColor: theme.backgroundColor,\n                padding: 1,\n                border: \"1px solid \" + theme.textColor,\n            }}\n        >\n            <Typography\n                color={theme.textColor}\n                fontFamily={theme.font}\n            >\n                {item.name}\n            </Typography>\n        </Paper>\n    )\n}\n\nconst applyDrag = (arr: Item[], dropResult: DropResult, initSort: boolean) => {\n    const { removedIndex, addedIndex, payload } = dropResult;\n    if (removedIndex === null && addedIndex === null) return arr;\n\n    const result = [...arr];\n    let itemToAdd = payload;\n\n    if (removedIndex !== null) {\n        itemToAdd = result.splice(removedIndex, 1)[0];\n    }\n\n    if (addedIndex !== null) {\n        result.splice(addedIndex, 0, itemToAdd);\n    }\n\n    if (initSort) {\n        return result.sort((a: Item, b: Item) => a.order - b.order)\n    } else {\n        return result.map((item: Item, idx: number) => {\n            return { ...item, order: idx };\n        });\n    }\n};\n\nexport type ContainerProps = {\n    items: Item[]\n    renderItem?: (theme: Theme, item: Item) => React.ReactElement\n    initSort?: boolean\n    theme: Theme\n}\ntype Props = {\n    setItems: React.Dispatch<React.SetStateAction<Item[]>>\n} & ContainerProps\n\n// (3) DOM Layer\nconst ContainerComponent: React.FC<Props> = (props: Props) => (\n\n    <Container\n        onDrop={(e: DropResult) => props.setItems(applyDrag(props.items, e, props.initSort ?? false))}\n    >\n        {\n            props.items.map((item: Item) => {\n                return (\n                    <Draggable key={item.id}>\n                        {props.renderItem ? props.renderItem(props.theme, item) : defaultRenderItem(props.theme, item)}\n                    </Draggable>\n                );\n            })\n        }\n    </Container >\n)\n\n// (4) Container Layer\nexport const DraggableList: React.FC<ContainerProps> = props => {\n    const [items, setItems] = React.useState(props.items);\n    React.useEffect(() => {\n        Streamlit.setComponentValue(items)\n    }, [items])\n    return <ContainerComponent {...{ ...props, items, setItems }} />\n}\n\nexport default DraggableList;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { RenderData } from \"streamlit-component-lib\";\nimport { useRenderData, StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport DraggableList from \"./DraggableList\"\n\nconst DraggableListComponent: React.VFC = () => {\n  const renderData: RenderData = useRenderData();\n  return (\n    <DraggableList {...{ ...renderData.args, \"theme\": renderData.theme }} />\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <DraggableListComponent />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}