# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['sphinx_autoissues']

package_data = \
{'': ['*']}

setup_kwargs = {
    'name': 'sphinx-autoissues',
    'version': '0.0.1a1',
    'description': 'Sphinx integration with different issuetrackers',
    'long_description': '# `sphinx-autoissues` &middot; [![Python Package](https://img.shields.io/pypi/v/sphinx-autoissues.svg)](https://pypi.org/project/sphinx-autoissues/) [![License](https://img.shields.io/github/license/tony/sphinx-autoissues.svg)](https://github.com/tony/sphinx-autoissues/blob/master/LICENSE) [![Code Coverage](https://codecov.io/gh/tony/sphinx-autoissues/branch/master/graph/badge.svg)](https://codecov.io/gh/tony/sphinx-autoissues)\n\n<https://sphinx-autoissues.git-pull.com/>\n\nThis is a fork of Sebastian Wiesner <lunaryorn@gmail.com>\'s excellent\n[sphinxcontrib-issuetracker](https://github.com/lunaryorn/sphinxcontrib-issuetracker) plugin.\n\nA [Sphinx](https://www.sphinx-doc.org/en/latest) extension to reference issues in issue trackers,\neither explicitly with an "issue" role or optionally implicitly by issue ids like `#10` in\nplaintext.\n\nCurrently the following issue trackers are supported: [GitHub](https://github.com)\n\nA simple API is provided to add support for other issue trackers. If you added support for a new\ntracker, please consider sending a patch to make your work available to other users of this\nextension.\n\n## What\'s changed from sphinx-issuetracker?\n\nThe old codebase has most of its commits from 2010-2012. For that time, the quality is impeccable,\nbut a lot has happened tooling wise.\n\nWe\'ve incorporated the python toolset from git-pull projects like tmuxp / libvcs / cihai: mypy,\nblack, isort, pytest, markdown docs w/ doctests, github workflows, etc. In addition:\n\n- Python 2.x support removed via `pyupgrade` and by hand\n  - Compat import, `__future__` statements\n- Poetry\n- Minimum python version 3.7\n- Updated to latest sphinx (from 1.1)\n  - Import changes\n  - See [sphinx deprecations](https://www.sphinx-doc.org/en/master/extdev/deprecated.html)\n- Updated to latest pytest (from 2.2)\n  - Remove `funcargs` and marker usage that wouldn\'t work in pytest 7+\n  - See [pytest deprecations](https://docs.pytest.org/en/7.1.x/deprecations.html)\n\n## Installation\n\nThis extension can be installed from the\n[Python Package Index](http://pypi.python.org/pypi/sphinx-autoissues):\n\n```console\n$ pip install sphinx-autoissues\n```\n\nThis extension requires Sphinx 1.1 and Python 2.6 or Python 3.1.\n\n## Usage\n\nJust add this extension to `extensions` and configure your issue tracker:\n\n```python\nextensions = [\'sphinx_autoissues\']\n```\n\n```python\nissuetracker = \'github\'\nissuetracker_project = \'tony/sphinx-autoissues\'\n```\n\nNow issue references like `#10` are replaced with links to the issue tracker of this extension,\nunless the reference occurs in literal text like inline literals or code blocks.\n\nYou can disable this magic behaviour by setting `issuetracker_plaintext_issues` to `False`:\n\n```python\nissuetracker_plaintext_issues = False\n```\n\nNow textual references are no longer replaced. However, you can still explicitly reference issues\nwith the `issue` role.\n\nFor more details refer to the [documentation](https://sphinx-autoissues.git-pull.com).\n\n## Support\n\nPlease report issues to the [issue tracker](https://github.com/tony/sphinx-autoissues/issues/) if\nyou have trouble, found a bug in this extension or lack support for a specific issue tracker, but\nrespect the following rules:\n\n- Check that the issue has not already been reported.\n- Check that the issue is not already fixed in the `master` branch.\n- Open issues with clear title and a detailed description in grammatically correct, complete\n  sentences.\n\n## Development\n\nThe source code is hosted on [Github](https://github.com/):\n\n```console\n$ git clone https://github.com/tony/sphinx-autoissues\n```\n\nPlease fork the repository and send pull requests with your fixes or cool new features, but respect\nthe following rules:\n\n- Read\n  [how to properly contribute to open source projects on GitHub](http://gun.io/blog/how-to-github-fork-branch-and-pull-request/).\n- Use a topic branch to easily amend a pull request later, if necessary.\n- Write\n  [good commit messages](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).\n- Squash commits on the topic branch before opening a pull request.\n- Respect `8` (use [pep8](https://pypi.python.org/pypi/pep8/) to check your coding style compliance)\n- Add unit tests\n- Open a [pull request](https://help.github.com/articles/using-pull-requests) that relates to but\n  one subject with a clear title and description in grammatically correct, complete sentences.\n\n[![Docs](https://github.com/tony/sphinx-autoissues/workflows/docs/badge.svg)](https://sphinx-autoissues.git-pull.com/)\n[![Build Status](https://github.com/tony/sphinx-autoissues/workflows/tests/badge.svg)](https://github.com/tony/sphinx-autoissues/actions?query=workflow%3A%22tests%22)\n',
    'author': 'Tony Narlock',
    'author_email': 'tony@git-pull.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://sphinx-autoissues.git-pull.com',
    'packages': packages,
    'package_data': package_data,
    'python_requires': '>=3.7,<4.0',
}


setup(**setup_kwargs)
