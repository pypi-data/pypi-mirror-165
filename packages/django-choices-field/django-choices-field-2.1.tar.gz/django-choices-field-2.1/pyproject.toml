[tool.poetry]
name = "django-choices-field"
version = "2.1"
description = "Django field that set/get django's new TextChoices/IntegerChoices enum."
authors = ["Thiago Bellini Ribeiro <thiago@bellini.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/bellini666/django-choices-field"
repository = "https://github.com/bellini666/django-choices-field"
documentation = "https://django-choices-field.readthedocs.io"
keywords = ["django", "enum"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Framework :: Django",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 4.1",
]
packages = [{ include = "django_choices_field" }]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
codecov = "^2.1.11"
django = "^4.0"
django-types = "^0.16.0"
flake8 = "^4.0.1"
flake8-broken-line = "^0.5.0"
flake8-bugbear = "^22.4.25"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.5.0"
flake8-polyfill = "^1.0.2"
flake8-return = "^1.1.3"
flake8-simplify = "^0.19.2"
mock = "^4.0.3"
pynvim = "^0.4.3"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-django = "^4.2.0"
isort = "^5.9.2"

[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
force_sort_within_sections = true

[tool.pyright]
pythonVersion = "3.8"
useLibraryCodeForTypes = true
venvPath = "."
venv = ".venv"
reportCallInDefaultInitializer = "warning"
reportMatchNotExhaustive = "warning"
reportMissingSuperCall = "warning"
reportOverlappingOverload = "warning"
reportUninitializedInstanceVariable = "none"
reportUnnecessaryCast = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUntypedNamedTuple = "error"
reportUnusedExpression = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
strictDictionaryInference = true
strictListInference = true
strictSetInference = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = "tests/test_*.py"
addopts = "--cov=./ -vv"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
