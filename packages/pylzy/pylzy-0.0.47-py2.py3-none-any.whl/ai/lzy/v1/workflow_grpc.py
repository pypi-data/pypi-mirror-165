# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: ai/lzy/v1/workflow.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import ai.lzy.v1.server_pb2
import ai.lzy.v1.workflow_pb2


class LzyWorkflowBase(abc.ABC):

    @abc.abstractmethod
    async def CreateWorkflow(self, stream: 'grpclib.server.Stream[ai.lzy.v1.workflow_pb2.CreateWorkflowRequest, ai.lzy.v1.workflow_pb2.CreateWorkflowResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AttachWorkflow(self, stream: 'grpclib.server.Stream[ai.lzy.v1.workflow_pb2.AttachWorkflowRequest, ai.lzy.v1.workflow_pb2.AttachWorkflowResponse]') -> None:
        pass

    @abc.abstractmethod
    async def FinishWorkflow(self, stream: 'grpclib.server.Stream[ai.lzy.v1.workflow_pb2.FinishWorkflowRequest, ai.lzy.v1.workflow_pb2.FinishWorkflowResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteWorkflow(self, stream: 'grpclib.server.Stream[ai.lzy.v1.workflow_pb2.DeleteWorkflowRequest, ai.lzy.v1.workflow_pb2.DeleteWorkflowResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/ai.lzy.v1.LzyWorkflow/CreateWorkflow': grpclib.const.Handler(
                self.CreateWorkflow,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.workflow_pb2.CreateWorkflowRequest,
                ai.lzy.v1.workflow_pb2.CreateWorkflowResponse,
            ),
            '/ai.lzy.v1.LzyWorkflow/AttachWorkflow': grpclib.const.Handler(
                self.AttachWorkflow,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.workflow_pb2.AttachWorkflowRequest,
                ai.lzy.v1.workflow_pb2.AttachWorkflowResponse,
            ),
            '/ai.lzy.v1.LzyWorkflow/FinishWorkflow': grpclib.const.Handler(
                self.FinishWorkflow,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.workflow_pb2.FinishWorkflowRequest,
                ai.lzy.v1.workflow_pb2.FinishWorkflowResponse,
            ),
            '/ai.lzy.v1.LzyWorkflow/DeleteWorkflow': grpclib.const.Handler(
                self.DeleteWorkflow,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.workflow_pb2.DeleteWorkflowRequest,
                ai.lzy.v1.workflow_pb2.DeleteWorkflowResponse,
            ),
        }


class LzyWorkflowStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateWorkflow = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyWorkflow/CreateWorkflow',
            ai.lzy.v1.workflow_pb2.CreateWorkflowRequest,
            ai.lzy.v1.workflow_pb2.CreateWorkflowResponse,
        )
        self.AttachWorkflow = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyWorkflow/AttachWorkflow',
            ai.lzy.v1.workflow_pb2.AttachWorkflowRequest,
            ai.lzy.v1.workflow_pb2.AttachWorkflowResponse,
        )
        self.FinishWorkflow = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyWorkflow/FinishWorkflow',
            ai.lzy.v1.workflow_pb2.FinishWorkflowRequest,
            ai.lzy.v1.workflow_pb2.FinishWorkflowResponse,
        )
        self.DeleteWorkflow = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyWorkflow/DeleteWorkflow',
            ai.lzy.v1.workflow_pb2.DeleteWorkflowRequest,
            ai.lzy.v1.workflow_pb2.DeleteWorkflowResponse,
        )
