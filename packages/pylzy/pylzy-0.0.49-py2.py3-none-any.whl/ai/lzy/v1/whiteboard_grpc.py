# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: ai/lzy/v1/whiteboard.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import ai.lzy.v1.auth_pb2
import ai.lzy.v1.backoffice_pb2
import ai.lzy.v1.zygote_pb2
import google.protobuf.timestamp_pb2
import ai.lzy.v1.whiteboard_pb2


class SnapshotApiBase(abc.ABC):

    @abc.abstractmethod
    async def CreateSnapshot(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.CreateSnapshotCommand, ai.lzy.v1.whiteboard_pb2.Snapshot]') -> None:
        pass

    @abc.abstractmethod
    async def PrepareToSave(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.PrepareCommand, ai.lzy.v1.whiteboard_pb2.OperationStatus]') -> None:
        pass

    @abc.abstractmethod
    async def Commit(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.CommitCommand, ai.lzy.v1.whiteboard_pb2.OperationStatus]') -> None:
        pass

    @abc.abstractmethod
    async def Abort(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.AbortCommand, ai.lzy.v1.whiteboard_pb2.OperationStatus]') -> None:
        pass

    @abc.abstractmethod
    async def FinalizeSnapshot(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.FinalizeSnapshotCommand, ai.lzy.v1.whiteboard_pb2.OperationStatus]') -> None:
        pass

    @abc.abstractmethod
    async def LastSnapshot(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.LastSnapshotCommand, ai.lzy.v1.whiteboard_pb2.Snapshot]') -> None:
        pass

    @abc.abstractmethod
    async def EntryStatus(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.EntryStatusCommand, ai.lzy.v1.whiteboard_pb2.EntryStatusResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateEntry(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.CreateEntryCommand, ai.lzy.v1.whiteboard_pb2.OperationStatus]') -> None:
        pass

    @abc.abstractmethod
    async def SaveExecution(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.SaveExecutionCommand, ai.lzy.v1.whiteboard_pb2.SaveExecutionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ResolveExecution(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.ResolveExecutionCommand, ai.lzy.v1.whiteboard_pb2.ResolveExecutionResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/ai.lzy.v1.SnapshotApi/CreateSnapshot': grpclib.const.Handler(
                self.CreateSnapshot,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.CreateSnapshotCommand,
                ai.lzy.v1.whiteboard_pb2.Snapshot,
            ),
            '/ai.lzy.v1.SnapshotApi/PrepareToSave': grpclib.const.Handler(
                self.PrepareToSave,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.PrepareCommand,
                ai.lzy.v1.whiteboard_pb2.OperationStatus,
            ),
            '/ai.lzy.v1.SnapshotApi/Commit': grpclib.const.Handler(
                self.Commit,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.CommitCommand,
                ai.lzy.v1.whiteboard_pb2.OperationStatus,
            ),
            '/ai.lzy.v1.SnapshotApi/Abort': grpclib.const.Handler(
                self.Abort,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.AbortCommand,
                ai.lzy.v1.whiteboard_pb2.OperationStatus,
            ),
            '/ai.lzy.v1.SnapshotApi/FinalizeSnapshot': grpclib.const.Handler(
                self.FinalizeSnapshot,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.FinalizeSnapshotCommand,
                ai.lzy.v1.whiteboard_pb2.OperationStatus,
            ),
            '/ai.lzy.v1.SnapshotApi/LastSnapshot': grpclib.const.Handler(
                self.LastSnapshot,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.LastSnapshotCommand,
                ai.lzy.v1.whiteboard_pb2.Snapshot,
            ),
            '/ai.lzy.v1.SnapshotApi/EntryStatus': grpclib.const.Handler(
                self.EntryStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.EntryStatusCommand,
                ai.lzy.v1.whiteboard_pb2.EntryStatusResponse,
            ),
            '/ai.lzy.v1.SnapshotApi/CreateEntry': grpclib.const.Handler(
                self.CreateEntry,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.CreateEntryCommand,
                ai.lzy.v1.whiteboard_pb2.OperationStatus,
            ),
            '/ai.lzy.v1.SnapshotApi/SaveExecution': grpclib.const.Handler(
                self.SaveExecution,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.SaveExecutionCommand,
                ai.lzy.v1.whiteboard_pb2.SaveExecutionResponse,
            ),
            '/ai.lzy.v1.SnapshotApi/ResolveExecution': grpclib.const.Handler(
                self.ResolveExecution,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.ResolveExecutionCommand,
                ai.lzy.v1.whiteboard_pb2.ResolveExecutionResponse,
            ),
        }


class SnapshotApiStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateSnapshot = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/CreateSnapshot',
            ai.lzy.v1.whiteboard_pb2.CreateSnapshotCommand,
            ai.lzy.v1.whiteboard_pb2.Snapshot,
        )
        self.PrepareToSave = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/PrepareToSave',
            ai.lzy.v1.whiteboard_pb2.PrepareCommand,
            ai.lzy.v1.whiteboard_pb2.OperationStatus,
        )
        self.Commit = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/Commit',
            ai.lzy.v1.whiteboard_pb2.CommitCommand,
            ai.lzy.v1.whiteboard_pb2.OperationStatus,
        )
        self.Abort = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/Abort',
            ai.lzy.v1.whiteboard_pb2.AbortCommand,
            ai.lzy.v1.whiteboard_pb2.OperationStatus,
        )
        self.FinalizeSnapshot = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/FinalizeSnapshot',
            ai.lzy.v1.whiteboard_pb2.FinalizeSnapshotCommand,
            ai.lzy.v1.whiteboard_pb2.OperationStatus,
        )
        self.LastSnapshot = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/LastSnapshot',
            ai.lzy.v1.whiteboard_pb2.LastSnapshotCommand,
            ai.lzy.v1.whiteboard_pb2.Snapshot,
        )
        self.EntryStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/EntryStatus',
            ai.lzy.v1.whiteboard_pb2.EntryStatusCommand,
            ai.lzy.v1.whiteboard_pb2.EntryStatusResponse,
        )
        self.CreateEntry = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/CreateEntry',
            ai.lzy.v1.whiteboard_pb2.CreateEntryCommand,
            ai.lzy.v1.whiteboard_pb2.OperationStatus,
        )
        self.SaveExecution = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/SaveExecution',
            ai.lzy.v1.whiteboard_pb2.SaveExecutionCommand,
            ai.lzy.v1.whiteboard_pb2.SaveExecutionResponse,
        )
        self.ResolveExecution = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.SnapshotApi/ResolveExecution',
            ai.lzy.v1.whiteboard_pb2.ResolveExecutionCommand,
            ai.lzy.v1.whiteboard_pb2.ResolveExecutionResponse,
        )


class WbApiBase(abc.ABC):

    @abc.abstractmethod
    async def CreateWhiteboard(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.CreateWhiteboardCommand, ai.lzy.v1.whiteboard_pb2.Whiteboard]') -> None:
        pass

    @abc.abstractmethod
    async def Link(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.LinkCommand, ai.lzy.v1.whiteboard_pb2.OperationStatus]') -> None:
        pass

    @abc.abstractmethod
    async def GetWhiteboard(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.GetWhiteboardCommand, ai.lzy.v1.whiteboard_pb2.Whiteboard]') -> None:
        pass

    @abc.abstractmethod
    async def WhiteboardsList(self, stream: 'grpclib.server.Stream[ai.lzy.v1.whiteboard_pb2.WhiteboardsListCommand, ai.lzy.v1.whiteboard_pb2.WhiteboardsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/ai.lzy.v1.WbApi/CreateWhiteboard': grpclib.const.Handler(
                self.CreateWhiteboard,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.CreateWhiteboardCommand,
                ai.lzy.v1.whiteboard_pb2.Whiteboard,
            ),
            '/ai.lzy.v1.WbApi/Link': grpclib.const.Handler(
                self.Link,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.LinkCommand,
                ai.lzy.v1.whiteboard_pb2.OperationStatus,
            ),
            '/ai.lzy.v1.WbApi/GetWhiteboard': grpclib.const.Handler(
                self.GetWhiteboard,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.GetWhiteboardCommand,
                ai.lzy.v1.whiteboard_pb2.Whiteboard,
            ),
            '/ai.lzy.v1.WbApi/WhiteboardsList': grpclib.const.Handler(
                self.WhiteboardsList,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.whiteboard_pb2.WhiteboardsListCommand,
                ai.lzy.v1.whiteboard_pb2.WhiteboardsResponse,
            ),
        }


class WbApiStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateWhiteboard = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.WbApi/CreateWhiteboard',
            ai.lzy.v1.whiteboard_pb2.CreateWhiteboardCommand,
            ai.lzy.v1.whiteboard_pb2.Whiteboard,
        )
        self.Link = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.WbApi/Link',
            ai.lzy.v1.whiteboard_pb2.LinkCommand,
            ai.lzy.v1.whiteboard_pb2.OperationStatus,
        )
        self.GetWhiteboard = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.WbApi/GetWhiteboard',
            ai.lzy.v1.whiteboard_pb2.GetWhiteboardCommand,
            ai.lzy.v1.whiteboard_pb2.Whiteboard,
        )
        self.WhiteboardsList = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.WbApi/WhiteboardsList',
            ai.lzy.v1.whiteboard_pb2.WhiteboardsListCommand,
            ai.lzy.v1.whiteboard_pb2.WhiteboardsResponse,
        )
