# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: ai/lzy/v1/backoffice.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import ai.lzy.v1.auth_pb2
import ai.lzy.v1.task_pb2
import ai.lzy.v1.backoffice_pb2


class LzyBackofficeBase(abc.ABC):

    @abc.abstractmethod
    async def AddKey(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.AddKeyRequest, ai.lzy.v1.backoffice_pb2.AddKeyResult]') -> None:
        pass

    @abc.abstractmethod
    async def ListKeys(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.ListKeysRequest, ai.lzy.v1.backoffice_pb2.ListKeysResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteKey(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.DeleteKeyRequest, ai.lzy.v1.backoffice_pb2.DeleteKeyResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateUser(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.CreateUserRequest, ai.lzy.v1.backoffice_pb2.CreateUserResult]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteUser(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.DeleteUserRequest, ai.lzy.v1.backoffice_pb2.DeleteUserResult]') -> None:
        pass

    @abc.abstractmethod
    async def ListUsers(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.ListUsersRequest, ai.lzy.v1.backoffice_pb2.ListUsersResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GenerateSessionId(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.GenerateSessionIdRequest, ai.lzy.v1.backoffice_pb2.GenerateSessionIdResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AuthUserSession(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.AuthUserSessionRequest, ai.lzy.v1.backoffice_pb2.AuthUserSessionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CheckSession(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.CheckSessionRequest, ai.lzy.v1.backoffice_pb2.CheckSessionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CheckPermission(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.CheckPermissionRequest, ai.lzy.v1.backoffice_pb2.CheckPermissionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetTasks(self, stream: 'grpclib.server.Stream[ai.lzy.v1.backoffice_pb2.GetTasksRequest, ai.lzy.v1.backoffice_pb2.GetTasksResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/ai.lzy.v1.LzyBackoffice/AddKey': grpclib.const.Handler(
                self.AddKey,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.AddKeyRequest,
                ai.lzy.v1.backoffice_pb2.AddKeyResult,
            ),
            '/ai.lzy.v1.LzyBackoffice/ListKeys': grpclib.const.Handler(
                self.ListKeys,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.ListKeysRequest,
                ai.lzy.v1.backoffice_pb2.ListKeysResponse,
            ),
            '/ai.lzy.v1.LzyBackoffice/DeleteKey': grpclib.const.Handler(
                self.DeleteKey,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.DeleteKeyRequest,
                ai.lzy.v1.backoffice_pb2.DeleteKeyResponse,
            ),
            '/ai.lzy.v1.LzyBackoffice/CreateUser': grpclib.const.Handler(
                self.CreateUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.CreateUserRequest,
                ai.lzy.v1.backoffice_pb2.CreateUserResult,
            ),
            '/ai.lzy.v1.LzyBackoffice/DeleteUser': grpclib.const.Handler(
                self.DeleteUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.DeleteUserRequest,
                ai.lzy.v1.backoffice_pb2.DeleteUserResult,
            ),
            '/ai.lzy.v1.LzyBackoffice/ListUsers': grpclib.const.Handler(
                self.ListUsers,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.ListUsersRequest,
                ai.lzy.v1.backoffice_pb2.ListUsersResponse,
            ),
            '/ai.lzy.v1.LzyBackoffice/GenerateSessionId': grpclib.const.Handler(
                self.GenerateSessionId,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.GenerateSessionIdRequest,
                ai.lzy.v1.backoffice_pb2.GenerateSessionIdResponse,
            ),
            '/ai.lzy.v1.LzyBackoffice/AuthUserSession': grpclib.const.Handler(
                self.AuthUserSession,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.AuthUserSessionRequest,
                ai.lzy.v1.backoffice_pb2.AuthUserSessionResponse,
            ),
            '/ai.lzy.v1.LzyBackoffice/CheckSession': grpclib.const.Handler(
                self.CheckSession,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.CheckSessionRequest,
                ai.lzy.v1.backoffice_pb2.CheckSessionResponse,
            ),
            '/ai.lzy.v1.LzyBackoffice/CheckPermission': grpclib.const.Handler(
                self.CheckPermission,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.CheckPermissionRequest,
                ai.lzy.v1.backoffice_pb2.CheckPermissionResponse,
            ),
            '/ai.lzy.v1.LzyBackoffice/GetTasks': grpclib.const.Handler(
                self.GetTasks,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.backoffice_pb2.GetTasksRequest,
                ai.lzy.v1.backoffice_pb2.GetTasksResponse,
            ),
        }


class LzyBackofficeStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.AddKey = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/AddKey',
            ai.lzy.v1.backoffice_pb2.AddKeyRequest,
            ai.lzy.v1.backoffice_pb2.AddKeyResult,
        )
        self.ListKeys = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/ListKeys',
            ai.lzy.v1.backoffice_pb2.ListKeysRequest,
            ai.lzy.v1.backoffice_pb2.ListKeysResponse,
        )
        self.DeleteKey = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/DeleteKey',
            ai.lzy.v1.backoffice_pb2.DeleteKeyRequest,
            ai.lzy.v1.backoffice_pb2.DeleteKeyResponse,
        )
        self.CreateUser = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/CreateUser',
            ai.lzy.v1.backoffice_pb2.CreateUserRequest,
            ai.lzy.v1.backoffice_pb2.CreateUserResult,
        )
        self.DeleteUser = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/DeleteUser',
            ai.lzy.v1.backoffice_pb2.DeleteUserRequest,
            ai.lzy.v1.backoffice_pb2.DeleteUserResult,
        )
        self.ListUsers = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/ListUsers',
            ai.lzy.v1.backoffice_pb2.ListUsersRequest,
            ai.lzy.v1.backoffice_pb2.ListUsersResponse,
        )
        self.GenerateSessionId = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/GenerateSessionId',
            ai.lzy.v1.backoffice_pb2.GenerateSessionIdRequest,
            ai.lzy.v1.backoffice_pb2.GenerateSessionIdResponse,
        )
        self.AuthUserSession = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/AuthUserSession',
            ai.lzy.v1.backoffice_pb2.AuthUserSessionRequest,
            ai.lzy.v1.backoffice_pb2.AuthUserSessionResponse,
        )
        self.CheckSession = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/CheckSession',
            ai.lzy.v1.backoffice_pb2.CheckSessionRequest,
            ai.lzy.v1.backoffice_pb2.CheckSessionResponse,
        )
        self.CheckPermission = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/CheckPermission',
            ai.lzy.v1.backoffice_pb2.CheckPermissionRequest,
            ai.lzy.v1.backoffice_pb2.CheckPermissionResponse,
        )
        self.GetTasks = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyBackoffice/GetTasks',
            ai.lzy.v1.backoffice_pb2.GetTasksRequest,
            ai.lzy.v1.backoffice_pb2.GetTasksResponse,
        )
