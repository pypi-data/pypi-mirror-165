# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: ai/lzy/v1/portal.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import ai.lzy.v1.zygote_pb2
import google.protobuf.empty_pb2
import ai.lzy.v1.portal_pb2


class LzyPortalBase(abc.ABC):

    @abc.abstractmethod
    async def Start(self, stream: 'grpclib.server.Stream[ai.lzy.v1.portal_pb2.StartPortalRequest, ai.lzy.v1.portal_pb2.StartPortalResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Stop(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def Status(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, ai.lzy.v1.portal_pb2.PortalStatus]') -> None:
        pass

    @abc.abstractmethod
    async def OpenSlots(self, stream: 'grpclib.server.Stream[ai.lzy.v1.portal_pb2.OpenSlotsRequest, ai.lzy.v1.portal_pb2.OpenSlotsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SaveSnapshotSlot(self, stream: 'grpclib.server.Stream[ai.lzy.v1.portal_pb2.SaveSnapshotSlotRequest, ai.lzy.v1.portal_pb2.SaveSnapshotSlotResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/ai.lzy.v1.LzyPortal/Start': grpclib.const.Handler(
                self.Start,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.portal_pb2.StartPortalRequest,
                ai.lzy.v1.portal_pb2.StartPortalResponse,
            ),
            '/ai.lzy.v1.LzyPortal/Stop': grpclib.const.Handler(
                self.Stop,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ai.lzy.v1.LzyPortal/Status': grpclib.const.Handler(
                self.Status,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                ai.lzy.v1.portal_pb2.PortalStatus,
            ),
            '/ai.lzy.v1.LzyPortal/OpenSlots': grpclib.const.Handler(
                self.OpenSlots,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.portal_pb2.OpenSlotsRequest,
                ai.lzy.v1.portal_pb2.OpenSlotsResponse,
            ),
            '/ai.lzy.v1.LzyPortal/SaveSnapshotSlot': grpclib.const.Handler(
                self.SaveSnapshotSlot,
                grpclib.const.Cardinality.UNARY_UNARY,
                ai.lzy.v1.portal_pb2.SaveSnapshotSlotRequest,
                ai.lzy.v1.portal_pb2.SaveSnapshotSlotResponse,
            ),
        }


class LzyPortalStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Start = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyPortal/Start',
            ai.lzy.v1.portal_pb2.StartPortalRequest,
            ai.lzy.v1.portal_pb2.StartPortalResponse,
        )
        self.Stop = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyPortal/Stop',
            google.protobuf.empty_pb2.Empty,
            google.protobuf.empty_pb2.Empty,
        )
        self.Status = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyPortal/Status',
            google.protobuf.empty_pb2.Empty,
            ai.lzy.v1.portal_pb2.PortalStatus,
        )
        self.OpenSlots = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyPortal/OpenSlots',
            ai.lzy.v1.portal_pb2.OpenSlotsRequest,
            ai.lzy.v1.portal_pb2.OpenSlotsResponse,
        )
        self.SaveSnapshotSlot = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ai.lzy.v1.LzyPortal/SaveSnapshotSlot',
            ai.lzy.v1.portal_pb2.SaveSnapshotSlotRequest,
            ai.lzy.v1.portal_pb2.SaveSnapshotSlotResponse,
        )
