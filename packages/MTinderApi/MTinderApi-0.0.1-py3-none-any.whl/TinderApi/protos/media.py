# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: tinder/services/mediaservice/media/asset.proto, tinder/services/mediaservice/media/bounding_box.proto, tinder/services/mediaservice/media/crop_info.proto, tinder/services/mediaservice/media/image_file.proto, tinder/services/mediaservice/media/resolution.proto, tinder/services/mediaservice/media/media.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List, Optional

import betterproto


@dataclass
class Asset(betterproto.Message):
    url: Optional[str] = betterproto.message_field(1, wraps=betterproto.TYPE_STRING)
    format: Optional[str] = betterproto.message_field(2, wraps=betterproto.TYPE_STRING)
    type: Optional[str] = betterproto.message_field(3, wraps=betterproto.TYPE_STRING)
    created_at: Optional[str] = betterproto.message_field(
        4, wraps=betterproto.TYPE_STRING
    )
    width: Optional[int] = betterproto.message_field(5, wraps=betterproto.TYPE_INT32)
    height: Optional[int] = betterproto.message_field(6, wraps=betterproto.TYPE_INT32)
    qf: Optional[int] = betterproto.message_field(7, wraps=betterproto.TYPE_INT32)


@dataclass
class BoundingBox(betterproto.Message):
    height_pct: Optional[float] = betterproto.message_field(
        1, wraps=betterproto.TYPE_FLOAT
    )
    width_pct: Optional[float] = betterproto.message_field(
        2, wraps=betterproto.TYPE_FLOAT
    )
    x_offset_pct: Optional[float] = betterproto.message_field(
        3, wraps=betterproto.TYPE_FLOAT
    )
    y_offset_pct: Optional[float] = betterproto.message_field(
        4, wraps=betterproto.TYPE_FLOAT
    )


@dataclass
class CropInfo(betterproto.Message):
    algo: "BoundingBox" = betterproto.message_field(1)
    processed_by_bullseye: Optional[bool] = betterproto.message_field(
        2, wraps=betterproto.TYPE_BOOL
    )
    user: "BoundingBox" = betterproto.message_field(3)
    user_customized: Optional[bool] = betterproto.message_field(
        4, wraps=betterproto.TYPE_BOOL
    )


@dataclass
class ImageFile(betterproto.Message):
    height: Optional[int] = betterproto.message_field(1, wraps=betterproto.TYPE_INT32)
    url: Optional[str] = betterproto.message_field(2, wraps=betterproto.TYPE_STRING)
    width: Optional[int] = betterproto.message_field(3, wraps=betterproto.TYPE_INT32)


@dataclass
class Resolution(betterproto.Message):
    width: Optional[int] = betterproto.message_field(1, wraps=betterproto.TYPE_INT32)
    height: Optional[int] = betterproto.message_field(2, wraps=betterproto.TYPE_INT32)


@dataclass
class Media(betterproto.Message):
    id: str = betterproto.string_field(1)
    extension: Optional[str] = betterproto.message_field(
        2, wraps=betterproto.TYPE_STRING
    )
    file_name: Optional[str] = betterproto.message_field(
        3, wraps=betterproto.TYPE_STRING
    )
    url: Optional[str] = betterproto.message_field(4, wraps=betterproto.TYPE_STRING)
    processed_files: List["ImageFile"] = betterproto.message_field(5)
    crop: Optional[str] = betterproto.message_field(6, wraps=betterproto.TYPE_STRING)
    crop_info: "CropInfo" = betterproto.message_field(7)
    is_selected: Optional[bool] = betterproto.message_field(
        8, wraps=betterproto.TYPE_BOOL
    )
    profile_user_number: Optional[int] = betterproto.message_field(
        9, wraps=betterproto.TYPE_INT64
    )
    user_number: Optional[int] = betterproto.message_field(
        10, wraps=betterproto.TYPE_INT64
    )
    fb_id: Optional[str] = betterproto.message_field(11, wraps=betterproto.TYPE_STRING)
    main: Optional[bool] = betterproto.message_field(12, wraps=betterproto.TYPE_BOOL)
    ocr_text: Optional[str] = betterproto.message_field(
        13, wraps=betterproto.TYPE_STRING
    )
    processed_videos: List["ImageFile"] = betterproto.message_field(14)
    select_rate: Optional[float] = betterproto.message_field(
        15, wraps=betterproto.TYPE_FLOAT
    )
    shape: Optional[str] = betterproto.message_field(16, wraps=betterproto.TYPE_STRING)
    success_rate: Optional[float] = betterproto.message_field(
        17, wraps=betterproto.TYPE_FLOAT
    )
    xdistance_percent: Optional[float] = betterproto.message_field(
        18, wraps=betterproto.TYPE_FLOAT
    )
    xoffset_percent: Optional[float] = betterproto.message_field(
        19, wraps=betterproto.TYPE_FLOAT
    )
    ydistance_percent: Optional[float] = betterproto.message_field(
        20, wraps=betterproto.TYPE_FLOAT
    )
    yoffset_percent: Optional[float] = betterproto.message_field(
        21, wraps=betterproto.TYPE_FLOAT
    )
    last_update_time: Optional[str] = betterproto.message_field(
        22, wraps=betterproto.TYPE_STRING
    )
    webp_qf: List[Optional[int]] = betterproto.message_field(
        23, wraps=betterproto.TYPE_INT32
    )
    webp_res: List["Resolution"] = betterproto.message_field(24)
    created_at: Optional[str] = betterproto.message_field(
        25, wraps=betterproto.TYPE_STRING
    )
    updated_at: Optional[str] = betterproto.message_field(
        26, wraps=betterproto.TYPE_STRING
    )
    type: Optional[str] = betterproto.message_field(27, wraps=betterproto.TYPE_STRING)
    tags: List[str] = betterproto.string_field(28)
    assets: List["Asset"] = betterproto.message_field(29)