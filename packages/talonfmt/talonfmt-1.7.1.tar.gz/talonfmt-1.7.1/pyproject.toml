[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "talonfmt"
version = "1.7.1"
description = "A code formatter for Talon files"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["talonfmt"]
authors = [{ name = "Wen Kokke" }]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Compilers",
]
dependencies = [
  "click >= 8, <= 9",
  "doc_printer==0.13.1",
  "tree_sitter_talon >=3.0.3, <3.2.0",
]

[project.optional-dependencies]
dev = [
  "build >=0.8.0, <0.9",
  "pytest-benchmark[histogram] >=3.4.1, <4",
  "twine >=4.0.1, <4.1"
]
test = [
  "pytest >=7.1.2, <7.2",
  "pytest-benchmark >=3.4.1, <4",
  "pytest-golden >=0.2.2, <0.3",
]

[project.urls]
repository = "https://github.com/wenkokke/talonfmt"

[project.scripts]
talonfmt = "talonfmt:cli"

[tool.setuptools.package-data]
talonfmt = ["py.typed"]

[tool.pytest.ini_options]
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:"]
minversion = "6.0"
# addopts = "--benchmark-autosave"
testpaths = ["tests"]

[tool.bumpver]
current_version = "1.7.1"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"talonfmt/__init__.py" = ['__version__: str = "{version}"']

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39,py310
isolated_build = True

[testenv]
deps =
  pytest >=7.1.2, <8
  pytest-benchmark >=3.4.1, <4
  pytest-golden >=0.2.2, <0.3
commands = pytest --benchmark-disable -x
"""
