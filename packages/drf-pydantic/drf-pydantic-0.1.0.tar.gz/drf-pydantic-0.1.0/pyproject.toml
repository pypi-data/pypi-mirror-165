[tool.poetry]
name = "drf-pydantic"
version = "0.1.0"
description = "Use pydantic with the Django REST framework"
license = "MIT"
authors = ["George Bocharov <bocharovgeorgii@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/georgebv/drf-pydantic"
repository = "https://github.com/georgebv/drf-pydantic"
keywords = ["django", "drf", "pydantic", "typing", "rest", "api"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
packages = [
    { include = "drf_pydantic", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^1.9.0"
djangorestframework = "^3.13.0"

[tool.poetry.dev-dependencies]
mypy = "^0.971"
black = "^22.8.0"
isort = "^5.10.1"
pylint = "^2.15.0"
flake8 = "^5.0.4"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
lines_between_types = 1

[tool.pytest.ini_options]
addopts = "-v --cov=drf_pydantic --cov-report=term"
testpaths = [
    "tests",
]
