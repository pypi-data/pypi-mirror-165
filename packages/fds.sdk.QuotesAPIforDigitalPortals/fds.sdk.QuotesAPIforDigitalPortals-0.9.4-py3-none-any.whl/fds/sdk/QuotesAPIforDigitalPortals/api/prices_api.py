"""
    Prime Developer Trial

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.QuotesAPIforDigitalPortals.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.QuotesAPIforDigitalPortals.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.QuotesAPIforDigitalPortals.exceptions import ApiException
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_object21 import InlineObject21
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_response20079 import InlineResponse20079
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_response20080 import InlineResponse20080
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_response20081 import InlineResponse20081
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_response20082 import InlineResponse20082
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_response20083 import InlineResponse20083
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_response20084 import InlineResponse20084
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_response20085 import InlineResponse20085
from fds.sdk.QuotesAPIforDigitalPortals.model.inline_response20086 import InlineResponse20086





class PricesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.get_prices_bid_ask_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20081,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/bidAsk/get',
                'operation_id': 'get_prices_bid_ask_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'quality',
                    'attributes',
                    'subscription_minimum_interval',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'quality',
                    'subscription_minimum_interval',
                ],
                'validation': [
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "EOD": "EOD",
                        "BST": "BST"
                    },
                    ('subscription_minimum_interval',): {

                        "1000": 1000,
                        "5000": 5000,
                        "10000": 10000,
                        "30000": 30000,
                        "60000": 60000,
                        "300000": 300000
                    },
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                    'subscription_minimum_interval':
                        (float,),
                },
                'attribute_map': {
                    'id': 'id',
                    'quality': 'quality',
                    'attributes': '_attributes',
                    'subscription_minimum_interval': '_subscriptionMinimumInterval',
                },
                'location_map': {
                    'id': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                    'subscription_minimum_interval': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_prices_bid_ask_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20082,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/bidAsk/list',
                'operation_id': 'get_prices_bid_ask_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'ids',
                    'quality',
                    'same_quality',
                    'attributes',
                ],
                'required': [
                    'ids',
                ],
                'nullable': [
                ],
                'enum': [
                    'quality',
                ],
                'validation': [
                    'ids',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('ids',): {

                        'max_items': 100,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "EOD": "EOD",
                        "BST": "BST"
                    },
                },
                'openapi_types': {
                    'ids':
                        ([str],),
                    'quality':
                        (str,),
                    'same_quality':
                        (bool,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'ids': 'ids',
                    'quality': 'quality',
                    'same_quality': 'sameQuality',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'ids': 'query',
                    'quality': 'query',
                    'same_quality': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'ids': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_prices_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20079,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/get',
                'operation_id': 'get_prices_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'quality',
                    'attributes',
                    'subscription_minimum_interval',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'quality',
                    'subscription_minimum_interval',
                ],
                'validation': [
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "EOD": "EOD",
                        "BST": "BST"
                    },
                    ('subscription_minimum_interval',): {

                        "1000": 1000,
                        "5000": 5000,
                        "10000": 10000,
                        "30000": 30000,
                        "60000": 60000,
                        "300000": 300000
                    },
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                    'subscription_minimum_interval':
                        (float,),
                },
                'attribute_map': {
                    'id': 'id',
                    'quality': 'quality',
                    'attributes': '_attributes',
                    'subscription_minimum_interval': '_subscriptionMinimumInterval',
                },
                'location_map': {
                    'id': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                    'subscription_minimum_interval': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_prices_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20080,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/list',
                'operation_id': 'get_prices_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'ids',
                    'quality',
                    'same_quality',
                    'attributes',
                ],
                'required': [
                    'ids',
                ],
                'nullable': [
                ],
                'enum': [
                    'quality',
                ],
                'validation': [
                    'ids',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('ids',): {

                        'max_items': 100,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "EOD": "EOD",
                        "BST": "BST"
                    },
                },
                'openapi_types': {
                    'ids':
                        ([str],),
                    'quality':
                        (str,),
                    'same_quality':
                        (bool,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'ids': 'ids',
                    'quality': 'quality',
                    'same_quality': 'sameQuality',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'ids': 'query',
                    'quality': 'query',
                    'same_quality': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'ids': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_prices_orderbook_aggregated_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20083,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/orderbook/aggregated/get',
                'operation_id': 'get_prices_orderbook_aggregated_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'quality',
                    'attributes',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'quality',
                ],
                'validation': [
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "BST": "BST"
                    },
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'id': 'id',
                    'quality': 'quality',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'id': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_prices_orderbook_full_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20084,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/orderbook/full/get',
                'operation_id': 'get_prices_orderbook_full_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'quality',
                    'attributes',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'quality',
                ],
                'validation': [
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "BST": "BST"
                    },
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'id': 'id',
                    'quality': 'quality',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'id': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_prices_trading_schedule_event_type_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20086,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/tradingSchedule/event/type/list',
                'operation_id': 'get_prices_trading_schedule_event_type_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'attributes',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'attributes': '_attributes',
                },
                'location_map': {
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.post_prices_trading_schedule_event_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20085,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/tradingSchedule/event/list',
                'operation_id': 'post_prices_trading_schedule_event_list',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (InlineObject21,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")

    def get_prices_bid_ask_get(
        self,
        id,
        **kwargs
    ) -> InlineResponse20081:
        """Current bid and ask prices (best bid / offer) for a notation.  # noqa: E501

        Current bid and ask prices (best bid / offer) for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000.0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20081
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_prices_bid_ask_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_get_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[InlineResponse20081, int, typing.MutableMapping]:
        """Current bid and ask prices (best bid / offer) for a notation.  # noqa: E501

        Current bid and ask prices (best bid / offer) for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000.0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20081
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_prices_bid_ask_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_get_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[InlineResponse20081]":
        """Current bid and ask prices (best bid / offer) for a notation.  # noqa: E501

        Current bid and ask prices (best bid / offer) for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000.0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20081]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_prices_bid_ask_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_get_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20081, int, typing.MutableMapping]]":
        """Current bid and ask prices (best bid / offer) for a notation.  # noqa: E501

        Current bid and ask prices (best bid / offer) for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000.0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20081, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_prices_bid_ask_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_list(
        self,
        ids,
        **kwargs
    ) -> InlineResponse20082:
        """Current bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501

        Current bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            ids ([str]): List of notations.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): Assure that the prices for all notations are of the same quality.. [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20082
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['ids'] = \
            ids
        return self.get_prices_bid_ask_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_list_with_http_info(
        self,
        ids,
        **kwargs
    ) -> typing.Tuple[InlineResponse20082, int, typing.MutableMapping]:
        """Current bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501

        Current bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            ids ([str]): List of notations.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): Assure that the prices for all notations are of the same quality.. [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20082
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['ids'] = \
            ids
        return self.get_prices_bid_ask_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_list_async(
        self,
        ids,
        **kwargs
    ) -> "ApplyResult[InlineResponse20082]":
        """Current bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501

        Current bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            ids ([str]): List of notations.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): Assure that the prices for all notations are of the same quality.. [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20082]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['ids'] = \
            ids
        return self.get_prices_bid_ask_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_list_with_http_info_async(
        self,
        ids,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20082, int, typing.MutableMapping]]":
        """Current bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501

        Current bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            ids ([str]): List of notations.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): Assure that the prices for all notations are of the same quality.. [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20082, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['ids'] = \
            ids
        return self.get_prices_bid_ask_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_get(
        self,
        id,
        **kwargs
    ) -> InlineResponse20079:
        """Overview of trading on the current trading day, including the latest price, for a notation.  # noqa: E501

        Overview of trading on the current trading day, including the latest price, for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000.0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_prices_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_get_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[InlineResponse20079, int, typing.MutableMapping]:
        """Overview of trading on the current trading day, including the latest price, for a notation.  # noqa: E501

        Overview of trading on the current trading day, including the latest price, for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000.0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_prices_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_get_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[InlineResponse20079]":
        """Overview of trading on the current trading day, including the latest price, for a notation.  # noqa: E501

        Overview of trading on the current trading day, including the latest price, for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000.0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20079]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_prices_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_get_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20079, int, typing.MutableMapping]]":
        """Overview of trading on the current trading day, including the latest price, for a notation.  # noqa: E501

        Overview of trading on the current trading day, including the latest price, for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000.0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20079, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_prices_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_list(
        self,
        ids,
        **kwargs
    ) -> InlineResponse20080:
        """Overview of trading on the current trading day, including the latest price, for a list of notations.  # noqa: E501

        Overview of trading on the current trading day, including the latest price, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            ids ([str]): List of notations.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): Assure that the prices for all notations are of the same quality.. [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20080
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['ids'] = \
            ids
        return self.get_prices_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_list_with_http_info(
        self,
        ids,
        **kwargs
    ) -> typing.Tuple[InlineResponse20080, int, typing.MutableMapping]:
        """Overview of trading on the current trading day, including the latest price, for a list of notations.  # noqa: E501

        Overview of trading on the current trading day, including the latest price, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            ids ([str]): List of notations.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): Assure that the prices for all notations are of the same quality.. [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20080
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['ids'] = \
            ids
        return self.get_prices_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_list_async(
        self,
        ids,
        **kwargs
    ) -> "ApplyResult[InlineResponse20080]":
        """Overview of trading on the current trading day, including the latest price, for a list of notations.  # noqa: E501

        Overview of trading on the current trading day, including the latest price, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            ids ([str]): List of notations.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): Assure that the prices for all notations are of the same quality.. [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20080]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['ids'] = \
            ids
        return self.get_prices_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_list_with_http_info_async(
        self,
        ids,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20080, int, typing.MutableMapping]]":
        """Overview of trading on the current trading day, including the latest price, for a list of notations.  # noqa: E501

        Overview of trading on the current trading day, including the latest price, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            ids ([str]): List of notations.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): Assure that the prices for all notations are of the same quality.. [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20080, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['ids'] = \
            ids
        return self.get_prices_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_aggregated_get(
        self,
        id,
        **kwargs
    ) -> InlineResponse20083:
        """Orderbook aggregated by price.  # noqa: E501

        Orderbook aggregated by price.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20083
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_prices_orderbook_aggregated_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_aggregated_get_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[InlineResponse20083, int, typing.MutableMapping]:
        """Orderbook aggregated by price.  # noqa: E501

        Orderbook aggregated by price.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20083
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_prices_orderbook_aggregated_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_aggregated_get_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[InlineResponse20083]":
        """Orderbook aggregated by price.  # noqa: E501

        Orderbook aggregated by price.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20083]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_prices_orderbook_aggregated_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_aggregated_get_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20083, int, typing.MutableMapping]]":
        """Orderbook aggregated by price.  # noqa: E501

        Orderbook aggregated by price.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20083, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_prices_orderbook_aggregated_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_full_get(
        self,
        id,
        **kwargs
    ) -> InlineResponse20084:
        """Full orderbook  # noqa: E501

        Full orderbook  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20084
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_prices_orderbook_full_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_full_get_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[InlineResponse20084, int, typing.MutableMapping]:
        """Full orderbook  # noqa: E501

        Full orderbook  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20084
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_prices_orderbook_full_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_full_get_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[InlineResponse20084]":
        """Full orderbook  # noqa: E501

        Full orderbook  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20084]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_prices_orderbook_full_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_full_get_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20084, int, typing.MutableMapping]]":
        """Full orderbook  # noqa: E501

        Full orderbook  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Identifier of the notation.

        Keyword Args:
            quality (str): Quality of the price.. [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20084, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_prices_orderbook_full_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_trading_schedule_event_type_list(
        self,
        **kwargs
    ) -> InlineResponse20086:
        """Trading schedule event types.  # noqa: E501

        Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20086
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.get_prices_trading_schedule_event_type_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_trading_schedule_event_type_list_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20086, int, typing.MutableMapping]:
        """Trading schedule event types.  # noqa: E501

        Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20086
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.get_prices_trading_schedule_event_type_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_trading_schedule_event_type_list_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20086]":
        """Trading schedule event types.  # noqa: E501

        Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20086]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.get_prices_trading_schedule_event_type_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_trading_schedule_event_type_list_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20086, int, typing.MutableMapping]]":
        """Trading schedule event types.  # noqa: E501

        Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20086, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.get_prices_trading_schedule_event_type_list_endpoint.call_with_http_info(**kwargs)

    def post_prices_trading_schedule_event_list(
        self,
        body,
        **kwargs
    ) -> InlineResponse20085:
        """Sequence of market-related events.  # noqa: E501

        Sequence of market-related events like the opening time or closing time of a market of a specific notation.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            body (InlineObject21):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20085
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['body'] = \
            body
        return self.post_prices_trading_schedule_event_list_endpoint.call_with_http_info(**kwargs)

    def post_prices_trading_schedule_event_list_with_http_info(
        self,
        body,
        **kwargs
    ) -> typing.Tuple[InlineResponse20085, int, typing.MutableMapping]:
        """Sequence of market-related events.  # noqa: E501

        Sequence of market-related events like the opening time or closing time of a market of a specific notation.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            body (InlineObject21):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20085
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['body'] = \
            body
        return self.post_prices_trading_schedule_event_list_endpoint.call_with_http_info(**kwargs)

    def post_prices_trading_schedule_event_list_async(
        self,
        body,
        **kwargs
    ) -> "ApplyResult[InlineResponse20085]":
        """Sequence of market-related events.  # noqa: E501

        Sequence of market-related events like the opening time or closing time of a market of a specific notation.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            body (InlineObject21):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20085]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['body'] = \
            body
        return self.post_prices_trading_schedule_event_list_endpoint.call_with_http_info(**kwargs)

    def post_prices_trading_schedule_event_list_with_http_info_async(
        self,
        body,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20085, int, typing.MutableMapping]]":
        """Sequence of market-related events.  # noqa: E501

        Sequence of market-related events like the opening time or closing time of a market of a specific notation.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            body (InlineObject21):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20085, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['body'] = \
            body
        return self.post_prices_trading_schedule_event_list_endpoint.call_with_http_info(**kwargs)

